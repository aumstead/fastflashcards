{"version":3,"sources":["./src/app/_components/pages/login/send-verification-email/send-verification-email.component.ts","./src/app/_components/pages/login/send-verification-email/send-verification-email.component.html","./src/app/_components/navbar/navbar.component.ts","./src/app/_components/navbar/navbar.component.html","./src/app/_services/loading.service.ts","./src/app/_components/update-sw-modal/update-sw-modal.component.ts","./src/app/_components/update-sw-modal/update-sw-modal.component.html","./src/app/_components/pages/edit-cards/delete-card-modal/delete-card-modal.component.ts","./src/app/_components/pages/edit-cards/delete-card-modal/delete-card-modal.component.html","./src/app/_services/account.service.ts","./src/app/_components/pages/register/confirm-email/confirm-email.component.html","./src/app/_components/pages/register/confirm-email/confirm-email.component.ts","./src/app/_components/pages/login/forgot-password-confirmation/forgot-password-confirmation.component.ts","./src/app/_components/pages/login/forgot-password-confirmation/forgot-password-confirmation.component.html","./src/app/_components/pages/account-settings/change-password/change-password.component.ts","./src/app/_components/pages/account-settings/change-password/change-password.component.html","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/_components/pages/login/login.component.ts","./src/app/_components/pages/login/login.component.html","./src/app/_components/pages/add-cards/add-cards.component.html","./src/app/_components/pages/add-cards/add-cards.component.ts","./src/app/_services/card.service.ts","./src/app/_components/pages/server-error/server-error.component.html","./src/app/_components/pages/server-error/server-error.component.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/_guards/auth.guard.ts","./src/app/_components/pages/register/success/success.component.ts","./src/app/_components/pages/register/success/success.component.html","./src/app/_components/pages/edit-cards/edit-cards.component.ts","./src/app/_components/pages/edit-cards/edit-cards.component.html","./src/app/_components/pages/admin/edit-user/view-user-decks/view-user-decks.component.html","./src/app/_components/pages/admin/edit-user/view-user-decks/view-user-decks.component.ts","./src/app/_components/pages/decks/deck-page/delete-deck-modal/delete-deck-modal.component.ts","./src/app/_components/pages/decks/deck-page/delete-deck-modal/delete-deck-modal.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_components/pages/account-settings/delete-data/delete-data-success/delete-data-success.component.ts","./src/app/_components/pages/account-settings/delete-data/delete-data-success/delete-data-success.component.html","./src/app/_services/user.service.ts","./src/app/_interceptors/loading.interceptor.ts","./src/app/_components/pages/register/register.component.ts","./src/app/_components/pages/register/register.component.html","./src/app/_components/pages/login/forgot-password/forgot-password.component.ts","./src/app/_components/pages/login/forgot-password/forgot-password.component.html","./src/app/_components/pages/decks/new-deck-modal/new-deck-modal.component.ts","./src/app/_components/pages/decks/new-deck-modal/new-deck-modal.component.html","./src/app/_components/pages/admin/edit-user/view-deck/view-deck.component.html","./src/app/_components/pages/admin/edit-user/view-deck/view-deck.component.ts","./src/app/app.module.ts","./src/app/_components/pages/home/home.component.html","./src/app/_components/pages/home/home.component.ts","./src/app/_components/pages/reset-password/reset-password.component.ts","./src/app/_components/pages/reset-password/reset-password.component.html","./src/app/_components/pages/account-settings/delete-data/delete-data.component.ts","./src/app/_components/pages/account-settings/delete-data/delete-data.component.html","./src/app/_services/deck.service.ts","./src/app/_components/pages/decks/deck-page/edit-name-modal/edit-name-modal.component.ts","./src/app/_components/pages/decks/deck-page/edit-name-modal/edit-name-modal.component.html","./src/app/_components/pages/not-found/not-found.component.ts","./src/app/_components/pages/not-found/not-found.component.html","./src/app/_components/footer/footer.component.ts","./src/app/_components/footer/footer.component.html","./src/app/_components/pages/account-settings/change-password/change-password-success/change-password-success.component.ts","./src/app/_components/pages/account-settings/change-password/change-password-success/change-password-success.component.html","./src/app/_components/pages/login/send-verification-email-confirmation/send-verification-email-confirmation.component.ts","./src/app/_components/pages/login/send-verification-email-confirmation/send-verification-email-confirmation.component.html","./src/app/_components/pages/admin/edit-user/edit-email-confirmed-modal/edit-email-confirmed-modal.component.ts","./src/app/_components/pages/admin/edit-user/edit-email-confirmed-modal/edit-email-confirmed-modal.component.html","./src/app/_components/pages/admin/edit-user/edit-user.component.ts","./src/app/_components/pages/admin/edit-user/edit-user.component.html","./src/app/_components/pages/admin/edit-user/edit-password-modal/edit-password-modal.component.ts","./src/app/_components/pages/admin/edit-user/edit-password-modal/edit-password-modal.component.html","./src/app/_components/pages/admin/edit-user/delete-user-modal/delete-user-modal.component.ts","./src/app/_components/pages/admin/edit-user/delete-user-modal/delete-user-modal.component.html","./src/app/_components/pages/account-settings/account-settings.component.html","./src/app/_components/pages/account-settings/account-settings.component.ts","./src/app/_components/pages/reset-password/reset-password-confirmation/reset-password-confirmation.component.ts","./src/app/_components/pages/reset-password/reset-password-confirmation/reset-password-confirmation.component.html","./src/app/_directives/has-claim.directive.ts","./src/app/app-routing.module.ts","./src/app/_components/pages/decks/study/study.component.ts","./src/app/_components/pages/decks/study/study.component.html","./src/app/_components/pages/decks/deck-page/deck-page.component.ts","./src/app/_components/pages/decks/deck-page/deck-page.component.html","./src/app/_components/pages/decks/decks.component.ts","./src/app/_components/pages/decks/decks.component.html","./src/app/_components/pages/admin/admin.component.html","./src/app/_components/pages/admin/admin.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-send-verification-email',\r\n  templateUrl: './send-verification-email.component.html',\r\n  styleUrls: ['./send-verification-email.component.css'],\r\n})\r\nexport class SendVerificationEmailComponent implements OnInit {\r\n  requestVerificationEmailForm: FormGroup;\r\n  validationErrors: string[] = [];\r\n  errors = {\r\n    email: false,\r\n  };\r\n\r\n  constructor(\r\n    private _fb: FormBuilder,\r\n    private _accountService: AccountService,\r\n    private _router: Router,\r\n    private _titleService: Title\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(\r\n      `Request Verification Email | FastFlashCards.com`\r\n    );\r\n    this.initializeForm();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.requestVerificationEmailForm = this._fb.group({\r\n      email: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(40),\r\n          Validators.email,\r\n        ],\r\n      ],\r\n    });\r\n  }\r\n\r\n  requestEmailHandler() {\r\n    this._accountService\r\n      .requestVerificationEmail(\r\n        this.requestVerificationEmailForm.get('email').value\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          this._router.navigateByUrl('/login/verification-email-success');\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"container m-nav\">\r\n  <h4 class=\"pt-3\">Request Verification Email</h4>\r\n  <form\r\n    [formGroup]=\"requestVerificationEmailForm\"\r\n    (ngSubmit)=\"requestVerificationEmailForm.valid && requestEmailHandler()\"\r\n    class=\"col-md-4 mt-4 requestVerificationEmailForm\"\r\n  >\r\n    <div class=\"form-group mb-3\">\r\n      <label for=\"email\">Email Address</label>\r\n      <input\r\n        [class.is-invalid]=\"\r\n          requestVerificationEmailForm.get('email').errors &&\r\n          requestVerificationEmailForm.get('email').touched\r\n        \"\r\n        class=\"form-control mr-sm-2\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        formControlName=\"email\"\r\n      />\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"requestVerificationEmailForm.get('email').hasError('required')\"\r\n      >\r\n        Please enter an email.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"requestVerificationEmailForm.get('email').hasError('minlength')\"\r\n      >\r\n        Requires at least 3 characters.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"requestVerificationEmailForm.get('email').hasError('maxlength')\"\r\n      >\r\n        Has a max length of 40 characters.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"requestVerificationEmailForm.get('email').hasError('email')\"\r\n      >\r\n        Please enter a valid email address.\r\n      </div>\r\n    </div>\r\n    <button\r\n      class=\"btn btn-warning\"\r\n      type=\"submit\"\r\n      [disabled]=\"!requestVerificationEmailForm.valid\"\r\n    >\r\n      Request verification email\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\nimport { LoggedInUser } from 'src/app/_models/loggedInUser';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { DeckService } from 'src/app/_services/deck.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  deckId: number;\r\n\r\n  constructor(\r\n    public _accountService: AccountService,\r\n    public _router: Router,\r\n    private _route: ActivatedRoute,\r\n    private _deckService: DeckService\r\n  ) {}\r\n\r\n  currentUser: LoggedInUser;\r\n\r\n  ngOnInit(): void {\r\n    // this.deckId = parseInt(this._route.snapshot.paramMap.get('id'));\r\n    this.getCurrentDeckId();\r\n    this._accountService.currentUser$.pipe(take(1)).subscribe((user) => {\r\n      this.currentUser = user;\r\n    });\r\n  }\r\n\r\n  getCurrentDeckId() {\r\n    this._deckService.currentDeckId$.subscribe((deckId) => {\r\n      this.deckId = deckId;\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this._accountService.logout();\r\n    this.deckId = null;\r\n    this._router.navigateByUrl('/');\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top colorPrimary\">\r\n  <div class=\"container\">\r\n    <div\r\n      *ngIf=\"!(_accountService.currentUser$ | async)\"\r\n      class=\"navbar-nav d-md-none\"\r\n    >\r\n      <a class=\"navbar-brand-mobile\" routerLink=\"/\">\r\n        <svg\r\n          width=\"50\"\r\n          height=\"40\"\r\n          viewBox=\"0 0 74 44\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M44.7979 29.6829L10.5324 35.7249C8.42915 36.0957 6.42688 34.4769 6.02051 32.1723L2.74358 13.5879C2.32856 11.2342 3.70888 9.06953 5.76832 8.70639L40.0338 2.66446C42.1371 2.2936 44.1394 3.91238 44.5457 6.21704L47.814 24.7524C48.229 27.1061 46.9012 29.3121 44.7979 29.6829Z\"\r\n            fill=\"#253544\"\r\n          />\r\n          <path\r\n            d=\"M44.7979 29.6829L10.5324 35.7249C8.42915 36.0957 6.42688 34.4769 6.02051 32.1723L2.74358 13.5879C2.32856 11.2342 3.70888 9.06953 5.76832 8.70639L40.0338 2.66446C42.1371 2.2936 44.1394 3.91238 44.5457 6.21704L47.814 24.7524C48.229 27.1061 46.9012 29.3121 44.7979 29.6829Z\"\r\n            stroke=\"white\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M55.1147 42.3764H20.3206C18.1849 42.3764 16.4941 40.4345 16.4941 38.0943V19.2233C16.4941 16.8333 18.2294 14.9412 20.3206 14.9412H55.1147C57.2504 14.9412 58.9411 16.883 58.9411 19.2233V38.0445C58.9411 40.4345 57.2504 42.3764 55.1147 42.3764Z\"\r\n            fill=\"#253544\"\r\n          />\r\n          <path\r\n            d=\"M55.1147 42.3764H20.3206C18.1849 42.3764 16.4941 40.4345 16.4941 38.0943V19.2233C16.4941 16.8333 18.2294 14.9412 20.3206 14.9412H55.1147C57.2504 14.9412 58.9411 16.883 58.9411 19.2233V38.0445C58.9411 40.4345 57.2504 42.3764 55.1147 42.3764Z\"\r\n            stroke=\"white\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M62.657 40.5176L28.6232 33.2835C26.8581 32.9083 25.7145 30.9685 26.1558 28.8924L30.0793 10.4337C30.5293 8.31673 32.3908 7.05845 34.1194 7.42587L68.1532 14.66C69.9184 15.0352 71.0619 16.975 70.6206 19.051L66.7075 37.461C66.255 39.5896 64.4188 40.892 62.657 40.5176Z\"\r\n            fill=\"#253544\"\r\n            stroke=\"black\"\r\n          />\r\n          <path\r\n            d=\"M62.5531 41.0066L28.5193 33.7725C26.4303 33.3285 25.1802 31.0775 25.6667 28.7885L29.5903 10.3298C30.0872 7.99198 32.1779 6.50201 34.2234 6.9368L68.2572 14.1709C70.3462 14.6149 71.5963 16.8659 71.1097 19.155L67.1965 37.565C66.6996 39.9028 64.6421 41.4507 62.5531 41.0066Z\"\r\n            stroke=\"white\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M38.6509 17.5405L53.8409 20.7693\"\r\n            stroke=\"white\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M37.6096 22.439L47.6764 24.5787\"\r\n            stroke=\"white\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n          />\r\n        </svg>\r\n      </a>\r\n    </div>\r\n    <ul class=\"mobileUL\" *ngIf=\"_accountService.currentUser$ | async as user\">\r\n      <li class=\"liItem\">\r\n        <a\r\n          class=\"d-flex flex-column align-items-center justify-content-between link\"\r\n          [routerLink]=\"['/user/decks']\"\r\n        >\r\n          <svg\r\n            width=\"25\"\r\n            height=\"18\"\r\n            viewBox=\"0 0 25 18\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M17.457 12.6907H2.63053C1.72046 12.6907 1 11.8632 1 10.866L1 2.82468C1 1.80626 1.73942 1 2.63053 1L17.457 1C18.367 1 19.0875 1.82747 19.0875 2.82468V10.8448C19.0875 11.8632 18.367 12.6907 17.457 12.6907Z\"\r\n              fill=\"#253544\"\r\n            />\r\n            <path\r\n              d=\"M17.457 12.6907H2.63053C1.72046 12.6907 1 11.8632 1 10.866L1 2.82468C1 1.80626 1.73942 1 2.63053 1L17.457 1C18.367 1 19.0875 1.82747 19.0875 2.82468V10.8448C19.0875 11.8632 18.367 12.6907 17.457 12.6907Z\"\r\n              stroke=\"white\"\r\n              stroke-miterlimit=\"10\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M19.5876 14.8213H4.76114C3.85108 14.8213 3.13062 13.9938 3.13062 12.9966V4.9553C3.13062 3.93687 3.87004 3.13062 4.76114 3.13062H19.5876C20.4977 3.13062 21.2181 3.95809 21.2181 4.9553V12.9754C21.2181 13.9938 20.4977 14.8213 19.5876 14.8213Z\"\r\n              fill=\"#253544\"\r\n            />\r\n            <path\r\n              d=\"M19.5876 14.8213H4.76114C3.85108 14.8213 3.13062 13.9938 3.13062 12.9966V4.9553C3.13062 3.93687 3.87004 3.13062 4.76114 3.13062H19.5876C20.4977 3.13062 21.2181 3.95809 21.2181 4.9553V12.9754C21.2181 13.9938 20.4977 14.8213 19.5876 14.8213Z\"\r\n              stroke=\"white\"\r\n              stroke-miterlimit=\"10\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M21.8836 16.5H7.05716C6.47819 16.5 5.92664 15.9548 5.92664 15.1753V7.13401C5.92664 6.34131 6.49006 5.80933 7.05716 5.80933H21.8836C22.4626 5.80933 23.0141 6.35459 23.0141 7.13401V15.1541C23.0141 15.9587 22.4591 16.5 21.8836 16.5Z\"\r\n              fill=\"#253544\"\r\n              stroke=\"black\"\r\n            />\r\n            <path\r\n              d=\"M21.8836 17H7.05716C6.1471 17 5.42664 16.1726 5.42664 15.1753V7.13401C5.42664 6.11558 6.16606 5.30933 7.05716 5.30933H21.8836C22.7937 5.30933 23.5141 6.1368 23.5141 7.13401V15.1541C23.5141 16.1726 22.7937 17 21.8836 17Z\"\r\n              stroke=\"white\"\r\n              stroke-miterlimit=\"10\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M10.027 9.07886H16.6444\"\r\n              stroke=\"white\"\r\n              stroke-miterlimit=\"10\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M10.0269 11.2128H14.4124\"\r\n              stroke=\"white\"\r\n              stroke-miterlimit=\"10\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n          </svg>\r\n\r\n          <span>Decks</span>\r\n        </a>\r\n      </li>\r\n      <li class=\"liItem\">\r\n        <a\r\n          class=\"d-flex flex-column align-items-center justify-content-between link\"\r\n          routerLink=\"{{\r\n            deckId ? '/user/add-cards/' + deckId : '/user/add-cards/'\r\n          }}\"\r\n        >\r\n          <svg\r\n            width=\"27\"\r\n            height=\"18\"\r\n            viewBox=\"0 0 27 18\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M23.5232 16.5H3.23155C2.31712 16.5 1.5 15.6497 1.5 14.5027V3.49728C1.5 2.32917 2.33598 1.5 3.23155 1.5H23.5232C24.4376 1.5 25.2547 2.35028 25.2547 3.49728V14.4737C25.2547 15.6537 24.4341 16.5 23.5232 16.5Z\"\r\n              fill=\"#253544\"\r\n              stroke=\"black\"\r\n            />\r\n            <path\r\n              d=\"M23.5232 17H3.23155C1.98603 17 1 15.8675 1 14.5027V3.49728C1 2.10345 2.01198 1 3.23155 1H23.5232C24.7687 1 25.7547 2.13249 25.7547 3.49728V14.4737C25.7547 15.8675 24.7687 17 23.5232 17Z\"\r\n              stroke=\"white\"\r\n              stroke-miterlimit=\"10\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M13.6038 9.09888H10.1046M13.6038 5.59973V9.09888V5.59973ZM13.6038 9.09888V12.598V9.09888ZM13.6038 9.09888H17.1029H13.6038Z\"\r\n              stroke=\"white\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n          </svg>\r\n\r\n          <span>Add Cards</span>\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a\r\n          class=\"d-flex flex-column align-items-center justify-content-between link\"\r\n          routerLink=\"{{\r\n            deckId ? '/user/edit-cards/' + deckId : '/user/edit-cards/'\r\n          }}\"\r\n        >\r\n          <svg\r\n            width=\"27\"\r\n            height=\"18\"\r\n            viewBox=\"0 0 27 18\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M23.5232 16.5H3.23155C2.31712 16.5 1.5 15.6497 1.5 14.5027V3.49728C1.5 2.32917 2.33598 1.5 3.23155 1.5H23.5232C24.4376 1.5 25.2547 2.35028 25.2547 3.49728V14.4737C25.2547 15.6537 24.4341 16.5 23.5232 16.5Z\"\r\n              fill=\"#253544\"\r\n              stroke=\"black\"\r\n            />\r\n            <path\r\n              d=\"M23.5232 17H3.23155C1.98603 17 1 15.8675 1 14.5027V3.49728C1 2.10345 2.01198 1 3.23155 1H23.5232C24.7687 1 25.7547 2.13249 25.7547 3.49728V14.4737C25.7547 15.8675 24.7687 17 23.5232 17Z\"\r\n              stroke=\"white\"\r\n              stroke-miterlimit=\"10\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M15.7819 5.23769L17.7424 7.19817L15.7819 5.23769ZM16.6135 4.40603C16.8735 4.14605 17.2261 4 17.5938 4C17.9614 4 18.314 4.14605 18.574 4.40603C18.834 4.66601 18.98 5.01861 18.98 5.38627C18.98 5.75394 18.834 6.10654 18.574 6.36652L10.9405 14H9V12.0196L16.6135 4.40603V4.40603Z\"\r\n              stroke=\"white\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n          </svg>\r\n\r\n          <span>Edit Cards</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n    <a class=\"navbar-brand\" routerLink=\"/\">\r\n      <svg\r\n        width=\"50\"\r\n        height=\"40\"\r\n        viewBox=\"0 0 74 44\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M44.7979 29.6829L10.5324 35.7249C8.42915 36.0957 6.42688 34.4769 6.02051 32.1723L2.74358 13.5879C2.32856 11.2342 3.70888 9.06953 5.76832 8.70639L40.0338 2.66446C42.1371 2.2936 44.1394 3.91238 44.5457 6.21704L47.814 24.7524C48.229 27.1061 46.9012 29.3121 44.7979 29.6829Z\"\r\n          fill=\"#253544\"\r\n        />\r\n        <path\r\n          d=\"M44.7979 29.6829L10.5324 35.7249C8.42915 36.0957 6.42688 34.4769 6.02051 32.1723L2.74358 13.5879C2.32856 11.2342 3.70888 9.06953 5.76832 8.70639L40.0338 2.66446C42.1371 2.2936 44.1394 3.91238 44.5457 6.21704L47.814 24.7524C48.229 27.1061 46.9012 29.3121 44.7979 29.6829Z\"\r\n          stroke=\"white\"\r\n          stroke-width=\"2\"\r\n          stroke-miterlimit=\"10\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M55.1147 42.3764H20.3206C18.1849 42.3764 16.4941 40.4345 16.4941 38.0943V19.2233C16.4941 16.8333 18.2294 14.9412 20.3206 14.9412H55.1147C57.2504 14.9412 58.9411 16.883 58.9411 19.2233V38.0445C58.9411 40.4345 57.2504 42.3764 55.1147 42.3764Z\"\r\n          fill=\"#253544\"\r\n        />\r\n        <path\r\n          d=\"M55.1147 42.3764H20.3206C18.1849 42.3764 16.4941 40.4345 16.4941 38.0943V19.2233C16.4941 16.8333 18.2294 14.9412 20.3206 14.9412H55.1147C57.2504 14.9412 58.9411 16.883 58.9411 19.2233V38.0445C58.9411 40.4345 57.2504 42.3764 55.1147 42.3764Z\"\r\n          stroke=\"white\"\r\n          stroke-width=\"2\"\r\n          stroke-miterlimit=\"10\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M62.657 40.5176L28.6232 33.2835C26.8581 32.9083 25.7145 30.9685 26.1558 28.8924L30.0793 10.4337C30.5293 8.31673 32.3908 7.05845 34.1194 7.42587L68.1532 14.66C69.9184 15.0352 71.0619 16.975 70.6206 19.051L66.7075 37.461C66.255 39.5896 64.4188 40.892 62.657 40.5176Z\"\r\n          fill=\"#253544\"\r\n          stroke=\"black\"\r\n        />\r\n        <path\r\n          d=\"M62.5531 41.0066L28.5193 33.7725C26.4303 33.3285 25.1802 31.0775 25.6667 28.7885L29.5903 10.3298C30.0872 7.99198 32.1779 6.50201 34.2234 6.9368L68.2572 14.1709C70.3462 14.6149 71.5963 16.8659 71.1097 19.155L67.1965 37.565C66.6996 39.9028 64.6421 41.4507 62.5531 41.0066Z\"\r\n          stroke=\"white\"\r\n          stroke-width=\"2\"\r\n          stroke-miterlimit=\"10\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M38.6509 17.5405L53.8409 20.7693\"\r\n          stroke=\"white\"\r\n          stroke-width=\"2\"\r\n          stroke-miterlimit=\"10\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M37.6096 22.439L47.6764 24.5787\"\r\n          stroke=\"white\"\r\n          stroke-width=\"2\"\r\n          stroke-miterlimit=\"10\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </a>\r\n    <button\r\n      class=\"navbar-toggler collapsed\"\r\n      type=\"button\"\r\n      data-toggle=\"collapse\"\r\n      data-target=\"#navbarCollapse\"\r\n      aria-controls=\"navbarCollapse\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n      <ul\r\n        class=\"navbar-nav me-auto collapseNavbarNav\"\r\n        *ngIf=\"_accountService.currentUser$ | async as user\"\r\n      >\r\n        <li class=\"nav-item\">\r\n          <a\r\n            class=\"nav-link hideItemMobile\"\r\n            [routerLink]=\"['/user/decks']\"\r\n            routerLinkActive=\"router-link-active\"\r\n            >Decks</a\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a\r\n            class=\"nav-link hideItemMobile\"\r\n            routerLink=\"{{\r\n              deckId ? '/user/add-cards/' + deckId : '/user/add-cards/'\r\n            }}\"\r\n            routerLinkActive=\"router-link-active\"\r\n            >Add Cards</a\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a\r\n            class=\"nav-link hideItemMobile\"\r\n            routerLink=\"{{\r\n              deckId ? '/user/edit-cards/' + deckId : '/user/edit-cards/'\r\n            }}\"\r\n            routerLinkActive=\"router-link-active\"\r\n            >Edit Cards</a\r\n          >\r\n        </li>\r\n        <li class=\"nav-item hideItemMedium\">\r\n          <a\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarCollapse\"\r\n            class=\"nav-link\"\r\n            routerLink=\"/user/account-settings\"\r\n            routerLinkActive=\"router-link-active\"\r\n            >Account Settings</a\r\n          >\r\n        </li>\r\n        <li class=\"nav-item hideItemMedium\">\r\n          <button\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarCollapse\"\r\n            class=\"mobileCollapseBtn\"\r\n            (click)=\"logout()\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a\r\n            *appHasClaim=\"['IsAdmin']\"\r\n            class=\"nav-link\"\r\n            routerLink=\"/admin\"\r\n            routerLinkActive=\"router-link-active\"\r\n            >Admin</a\r\n          >\r\n        </li>\r\n      </ul>\r\n\r\n      <div\r\n        class=\"btn-group hideItemMobile\"\r\n        *ngIf=\"_accountService.currentUser$ | async as user\"\r\n        dropdown\r\n      >\r\n        <button\r\n          id=\"button-basic\"\r\n          dropdownToggle\r\n          type=\"button\"\r\n          class=\"dropdown-toggle userBtn\"\r\n          aria-controls=\"dropdown-basic\"\r\n        >\r\n          {{ user.email }}\r\n          <span class=\"caret\"></span>\r\n        </button>\r\n        <ul\r\n          id=\"dropdown-basic\"\r\n          *dropdownMenu\r\n          class=\"dropdown-menu dropdown-menu-right\"\r\n          role=\"menu\"\r\n          aria-labelledby=\"button-basic\"\r\n        >\r\n          <li role=\"menuitem\">\r\n            <a class=\"dropdown-item\" routerLink=\"/user/account-settings\"\r\n              >Account Settings</a\r\n            >\r\n          </li>\r\n          <li class=\"divider dropdown-divider\"></li>\r\n          <li role=\"menuitem\">\r\n            <button class=\"dropdown-item\" (click)=\"logout()\">Logout</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <ul\r\n        *ngIf=\"!(_accountService.currentUser$ | async)\"\r\n        class=\"navbar-nav collapseNavbarNav\"\r\n      >\r\n        <li class=\"nav-item\">\r\n          <a\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarCollapse\"\r\n            class=\"nav-link\"\r\n            [routerLink]=\"['/register']\"\r\n            routerLinkActive=\"router-link-active\"\r\n            >Register</a\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarCollapse\"\r\n            class=\"nav-link\"\r\n            [routerLink]=\"['/login']\"\r\n            routerLinkActive=\"router-link-active\"\r\n            >Login</a\r\n          >\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoadingService {\r\n  loadingRequestCount = 0;\r\n\r\n  constructor(private _spinnerService: NgxSpinnerService) {}\r\n\r\n  loading() {\r\n    this.loadingRequestCount++;\r\n    this._spinnerService.show(undefined, {\r\n      type: 'line-scale-pulse-out',\r\n      bdColor: 'rgba(256,256,256,0)',\r\n      color: '#95A5A6',\r\n      size: 'default',\r\n    });\r\n  }\r\n\r\n  idle() {\r\n    this.loadingRequestCount--;\r\n    if (this.loadingRequestCount <= 0) {\r\n      this.loadingRequestCount = 0;\r\n      this._spinnerService.hide();\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-update-sw-modal',\r\n  templateUrl: './update-sw-modal.component.html',\r\n  styleUrls: ['./update-sw-modal.component.css'],\r\n})\r\nexport class UpdateSwModalComponent implements OnInit {\r\n  constructor(public bsModalRef: BsModalRef) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  reloadPage() {\r\n    window.location.reload();\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title pull-left\">Update</h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close pull-right closeBtn\"\r\n    aria-label=\"Close\"\r\n    (click)=\"bsModalRef.hide()\"\r\n  >\r\n    <span class=\"timesSpan\" aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  An update is available. Simply reload the page to get the updates.\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"reloadPage()\">\r\n    Reload Page\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"bsModalRef.hide()\">\r\n    Cancel\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { Card } from 'src/app/_models/card';\r\nimport { CardService } from 'src/app/_services/card.service';\r\nimport { UserService } from 'src/app/_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-delete-card-modal',\r\n  templateUrl: './delete-card-modal.component.html',\r\n  styleUrls: ['./delete-card-modal.component.css'],\r\n})\r\nexport class DeleteCardModalComponent implements OnInit {\r\n  selectedCard: Card;\r\n  editCardForm: FormGroup;\r\n\r\n  constructor(\r\n    public bsModalRef: BsModalRef,\r\n    private _cardService: CardService,\r\n    private _userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  deleteCard(id: number) {\r\n    this._cardService.deleteCard(id).subscribe(() => {\r\n      // in the subscribe callback, update the cache\r\n      for (let i = 0; i < this._userService.userCache.decks.length; i++) {\r\n        if (\r\n          this._userService.userCache.decks[i].id === this.selectedCard.deckId\r\n        ) {\r\n          let card = this._userService.userCache.decks[i].cards.find(\r\n            (card) => card.id === this.selectedCard.id\r\n          );\r\n          let cardIdx =\r\n            this._userService.userCache.decks[i].cards.indexOf(card);\r\n          this._userService.userCache.decks[i].cards.splice(cardIdx, 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.editCardForm.reset();\r\n      this.selectedCard = null;\r\n      this.editCardForm.controls['front'].disable();\r\n      this.editCardForm.controls['back'].disable();\r\n      this.editCardForm.controls['order'].disable();\r\n      this.editCardForm.controls['deckId'].disable();\r\n      this.bsModalRef.hide();\r\n    });\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title pull-left\">Delete Card</h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close pull-right closeBtn\"\r\n    aria-label=\"Close\"\r\n    (click)=\"bsModalRef.hide()\"\r\n  >\r\n    <span class=\"timesSpan\" aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">Are you sure you want to delete this card?</div>\r\n<div class=\"modal-footer\">\r\n  <button\r\n    type=\"button\"\r\n    class=\"btn btn-danger\"\r\n    (click)=\"deleteCard(selectedCard.id)\"\r\n  >\r\n    Delete\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"bsModalRef.hide()\">\r\n    Cancel\r\n  </button>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { LoggedInUser } from '../_models/loggedInUser';\r\nimport { map } from 'rxjs/operators';\r\nimport { UserService } from './user.service';\r\nimport { ResetPasswordDTO } from '../_models/resetPasswordDTO';\r\nimport { ChangePasswordDTO } from '../_models/changePasswordDTO';\r\nimport { DeleteDataDTO } from '../_models/deleteDataDTO';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AccountService {\r\n  baseUrl = environment.apiUrl;\r\n  private currentUserSource = new BehaviorSubject<LoggedInUser>(null);\r\n  currentUser$ = this.currentUserSource.asObservable();\r\n\r\n  constructor(private _http: HttpClient, private _userService: UserService) { }\r\n\r\n  login(model: any) {\r\n    console.log(this.baseUrl)\r\n    return this._http.post(`${this.baseUrl}/account/login`, model).pipe(\r\n      map((response: LoggedInUser) => {\r\n        const user = response;\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  register(model: any) {\r\n    return this._http.post(`${this.baseUrl}/account/register`, model).pipe(\r\n      map(\r\n        (response: LoggedInUser) => {\r\n          const user = response;\r\n          // users are automatically logged in.\r\n          if (user) {\r\n            this.setCurrentUser(user);\r\n          }\r\n          return user;\r\n        },\r\n        (error) => console.error(error)\r\n      )\r\n    );\r\n  }\r\n\r\n  confirmEmail(userId: string, token: string) {\r\n    return this._http\r\n      .get(\r\n        `${this.baseUrl}/account/confirm-email?userId=${userId}&token=${token}`\r\n      )\r\n      .pipe(\r\n        map((response: LoggedInUser) => {\r\n          const user = response;\r\n          if (user) {\r\n            this.setCurrentUser(user);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  setCurrentUser(user: LoggedInUser) {\r\n    const isAdmin = this.getDecodedToken(user.token).IsAdmin;\r\n    if (isAdmin !== undefined) {\r\n      user.isAdmin = true;\r\n    } else {\r\n      user.isAdmin = false;\r\n    }\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.currentUserSource.next(user);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    this.currentUserSource.next(null);\r\n    this._userService.userCache = null;\r\n  }\r\n\r\n  getDecodedToken(token) {\r\n    return JSON.parse(atob(token.split('.')[1]));\r\n  }\r\n\r\n  forgotPassword(email: string) {\r\n    return this._http\r\n      .post(`${this.baseUrl}/account/ForgotPassword?email=${email}`, {})\r\n      .pipe(map((response: any) => { }));\r\n  }\r\n\r\n  resetPassword(dto: ResetPasswordDTO) {\r\n    return this._http\r\n      .post(`${this.baseUrl}/account/ResetPassword`, dto)\r\n      .pipe(map((response: any) => { }));\r\n  }\r\n\r\n  changePassword(dto: ChangePasswordDTO) {\r\n    return this._http\r\n      .post(`${this.baseUrl}/account/ChangePassword`, dto)\r\n      .pipe(map((response: any) => { }));\r\n  }\r\n\r\n  deleteData(dto: DeleteDataDTO) {\r\n    return this._http\r\n      .post(`${this.baseUrl}/account/DeleteUser`, dto)\r\n      .pipe(map((response: any) => { }));\r\n  }\r\n\r\n  requestVerificationEmail(email: string) {\r\n    return this._http\r\n      .post(`${this.baseUrl}/account/SendVerificationEmail?email=${email}`, {})\r\n      .pipe(map((response: any) => { }));\r\n  }\r\n\r\n  demoLogin() {\r\n    const model = {\r\n      email: 'demo@fastflashcards.com',\r\n      password: 'Gandalf1',\r\n    };\r\n    return this._http.post(`${this.baseUrl}/account/login`, model).pipe(\r\n      map((response: LoggedInUser) => {\r\n        const user = response;\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","<div class=\"container m-nav\">\r\n  <h4 class=\"pt-3\">Email Confirmation</h4>\r\n  <div *ngIf=\"confirmingEmail\">\r\n    <p>Confirming email...</p>\r\n  </div>\r\n  <div *ngIf=\"confirmed\">\r\n    <p>Thank you for confirming your email address. You are now logged in.</p>\r\n    <a [routerLink]=\"['/user/decks']\">Get started</a>\r\n  </div>\r\n  <div *ngIf=\"errors.unauthorized\">\r\n    <div class=\"text-danger\">\r\n      Email confirmation failed. You do not have login access.\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-confirm-email',\r\n  templateUrl: './confirm-email.component.html',\r\n  styleUrls: ['./confirm-email.component.css'],\r\n})\r\nexport class ConfirmEmailComponent implements OnInit {\r\n  userId: string;\r\n  token: string;\r\n  confirmingEmail: boolean;\r\n  confirmed = false;\r\n  errors = {\r\n    unauthorized: false,\r\n  };\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _accountService: AccountService,\r\n    private _titleService: Title\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(`Email Confirmation | FastFlashCards.com`);\r\n    this.confirmingEmail = true;\r\n    this.userId = this._route.snapshot.queryParamMap.get('userId');\r\n    this.token = this._route.snapshot.queryParamMap.get('token');\r\n    this._accountService.confirmEmail(this.userId, this.token).subscribe(\r\n      (response) => {\r\n        this.confirmingEmail = false;\r\n        this.confirmed = true;\r\n        // this._router.navigateByUrl('/user/decks');\r\n      },\r\n      (error) => {\r\n        this.confirmingEmail = false;\r\n        this.confirmed = false;\r\n        if (error.error.type === 'email not confirmed') {\r\n          this.errors.unauthorized = true;\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password-confirmation',\r\n  templateUrl: './forgot-password-confirmation.component.html',\r\n  styleUrls: ['./forgot-password-confirmation.component.css']\r\n})\r\nexport class ForgotPasswordConfirmationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container m-nav\">\r\n  <div class=\"col-md-6\">\r\n    <h4 class=\"pt-3\">Forgot Password</h4>\r\n    <p>\r\n      A reset password link has been sent to the provided email address. To\r\n      change your password, check your email, click the link, and follow the\r\n      instructions.\r\n    </p>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  ValidatorFn,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { ChangePasswordDTO } from 'src/app/_models/changePasswordDTO';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css'],\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  changePasswordForm: FormGroup;\r\n  validationErrors: string[] = [];\r\n  errors = {\r\n    currentPassword: false,\r\n    newPassword: false,\r\n    confirmNewPassword: false,\r\n  };\r\n\r\n  constructor(\r\n    private _fb: FormBuilder,\r\n    private _router: Router,\r\n    public _accountService: AccountService,\r\n    private _titleService: Title\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(`Change Password | FastFlashCards.com`);\r\n    this.initializeForm();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.changePasswordForm = this._fb.group({\r\n      currentPassword: ['', [Validators.required, Validators.minLength(6)]],\r\n      newPassword: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmNewPassword: [\r\n        '',\r\n        [Validators.required, this.matchValues('newPassword')],\r\n      ],\r\n    });\r\n    this.changePasswordForm.controls.newPassword.valueChanges.subscribe(() => {\r\n      this.changePasswordForm.controls.confirmNewPassword.updateValueAndValidity();\r\n    });\r\n  }\r\n\r\n  changePassword() {\r\n    const dto: ChangePasswordDTO = {\r\n      currentPassword: this.changePasswordForm.value.currentPassword,\r\n      newPassword: this.changePasswordForm.value.newPassword,\r\n    };\r\n    this._accountService.changePassword(dto).subscribe(\r\n      () => {\r\n        this._router.navigateByUrl(\r\n          `/user/account-settings/change-password/success`\r\n        );\r\n      },\r\n      (error) => {\r\n        this.validationErrors = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  matchValues(matchTo: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      return control?.value === control?.parent?.controls[matchTo].value\r\n        ? null\r\n        : { isMatching: true };\r\n    };\r\n  }\r\n}\r\n","<div class=\"container m-nav\">\r\n  <h1 class=\"h3 pt-3\">Change Password</h1>\r\n\r\n  <form\r\n    [formGroup]=\"changePasswordForm\"\r\n    (ngSubmit)=\"changePasswordForm.valid && changePassword()\"\r\n    class=\"mt-4 col-md-4 changePasswordForm\"\r\n  >\r\n    <div class=\"form-group mb-3\">\r\n      <label for=\"currentPassword\">Current Password</label>\r\n      <input\r\n        [class.is-invalid]=\"\r\n          changePasswordForm.get('currentPassword').errors &&\r\n          changePasswordForm.get('currentPassword').touched\r\n        \"\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        formControlName=\"currentPassword\"\r\n      />\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"changePasswordForm.get('currentPassword').hasError('required')\"\r\n      >\r\n        This field is required.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"changePasswordForm.get('currentPassword').hasError('minlength')\"\r\n      >\r\n        Password must be at least 6 characters, contain an uppercase letter, and\r\n        a number.\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group mb-3\">\r\n      <label for=\"newPassword\">New Password</label>\r\n      <input\r\n        [class.is-invalid]=\"\r\n          changePasswordForm.get('newPassword').errors &&\r\n          changePasswordForm.get('newPassword').touched\r\n        \"\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        formControlName=\"newPassword\"\r\n      />\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"changePasswordForm.get('newPassword').hasError('required')\"\r\n      >\r\n        This field is required.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"changePasswordForm.get('newPassword').hasError('minlength')\"\r\n      >\r\n        Password must be at least 6 characters, contain an uppercase letter, and\r\n        a number.\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group mb-3\">\r\n      <label for=\"confirmNewPassword\">Confirm New Password</label>\r\n      <input\r\n        [class.is-invalid]=\"\r\n          changePasswordForm.get('confirmNewPassword').errors &&\r\n          changePasswordForm.get('confirmNewPassword').touched\r\n        \"\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        formControlName=\"confirmNewPassword\"\r\n      />\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"\r\n          changePasswordForm.get('confirmNewPassword').hasError('required')\r\n        \"\r\n      >\r\n        Please confirm your password.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"\r\n          changePasswordForm.get('confirmNewPassword').hasError('isMatching')\r\n        \"\r\n      >\r\n        Your entered passwords don't match.\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"validationErrors.length > 0\">\r\n      <ul class=\"text-danger\">\r\n        <li *ngFor=\"let error of validationErrors\">\r\n          {{ error }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <button\r\n      [disabled]=\"!changePasswordForm.valid\"\r\n      class=\"btn btn-primary w-100 mt-3\"\r\n      type=\"submit\"\r\n    >\r\n      Change Password\r\n    </button>\r\n  </form>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:5001/api',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { LoggedInUser } from '../_models/loggedInUser';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private _accountService: AccountService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    let currentUser: LoggedInUser;\r\n\r\n    this._accountService.currentUser$\r\n      .pipe(take(1))\r\n      .subscribe((user) => (currentUser = user));\r\n\r\n    if (currentUser) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${currentUser.token}`,\r\n        },\r\n      });\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  validationErrors: string[] = [];\r\n  errors = {\r\n    email: false,\r\n    password: false,\r\n    confirmEmail: false,\r\n    loadingProviders: false,\r\n  };\r\n\r\n  // external auth\r\n  returnUrl: string = '/user/decks';\r\n\r\n  constructor(\r\n    public _accountService: AccountService,\r\n    private _router: Router,\r\n    private _titleService: Title,\r\n    private _fb: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(`Login | FastFlashCards.com`);\r\n    this.initializeForm();\r\n  }\r\n\r\n  login() {\r\n    this.errors = {\r\n      email: false,\r\n      password: false,\r\n      confirmEmail: false,\r\n      loadingProviders: false,\r\n    };\r\n    this._accountService.login(this.loginForm.value).subscribe(\r\n      () => {\r\n        this._router.navigateByUrl('/user/decks');\r\n      },\r\n      (error) => {\r\n        if (error.error.type === 'email') {\r\n          this.errors.email = true;\r\n        } else if (error.error.type === 'password') {\r\n          this.errors.password = true;\r\n        } else if (error.error.type === 'confirm email') {\r\n          this.errors.confirmEmail = true;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  initializeForm() {\r\n    this.loginForm = this._fb.group({\r\n      email: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(40),\r\n          Validators.email,\r\n        ],\r\n      ],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n    });\r\n  }\r\n}\r\n","<div class=\"col-lg-4 col-md-6 m-nav mx-auto loginWrapper\">\r\n  <h1 class=\"text-center pt-3 pt-lg-5 h3\">Login</h1>\r\n\r\n  <form\r\n    [formGroup]=\"loginForm\"\r\n    (ngSubmit)=\"loginForm.valid && login()\"\r\n    class=\"mb-3\"\r\n  >\r\n    <div class=\"form-group mb-3\">\r\n      <label for=\"email\">Email</label>\r\n      <input\r\n        [class.is-invalid]=\"\r\n          loginForm.get('email').errors && loginForm.get('email').touched\r\n        \"\r\n        class=\"form-control mr-sm-2\"\r\n        type=\"text\"\r\n        name=\"email\"\r\n        formControlName=\"email\"\r\n      />\r\n      <div *ngIf=\"errors.email\" class=\"text-danger invalidFeedback\">\r\n        This email address is not registered.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"loginForm.get('email').hasError('required')\"\r\n      >\r\n        Please enter an email.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"loginForm.get('email').hasError('minlength')\"\r\n      >\r\n        Requires at least 3 characters.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"loginForm.get('email').hasError('maxlength')\"\r\n      >\r\n        Has a max length of 40 characters.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"loginForm.get('email').hasError('email')\"\r\n      >\r\n        Please enter a valid email address.\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group mb-3\">\r\n      <label for=\"password\">Password</label>\r\n      <input\r\n        [class.is-invalid]=\"\r\n          loginForm.get('password').errors && loginForm.get('password').touched\r\n        \"\r\n        class=\"form-control mr-sm-2\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        formControlName=\"password\"\r\n      />\r\n      <div *ngIf=\"errors.password\" class=\"text-danger invalidFeedback\">\r\n        Invalid password. *Reminder: passwords require a number, uppercase\r\n        letter, and at least 6 characters.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"loginForm.get('password').hasError('required')\"\r\n      >\r\n        Please enter your password.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"\r\n          loginForm.get('password').hasError('minlength') && !errors.password\r\n        \"\r\n      >\r\n        Password must be at least 6 characters, contain an uppercase letter, and\r\n        a number.\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"validationErrors.length > 0\">\r\n      <ul class=\"text-danger\">\r\n        <li *ngFor=\"let error of validationErrors\">\r\n          {{ error }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div *ngIf=\"errors.confirmEmail\">\r\n      <div class=\"text-danger\">Confirm your email address to login.</div>\r\n      <div>\r\n        Need a verification email?\r\n        <a routerLink=\"/login/verification-email\">Click here.</a>\r\n      </div>\r\n    </div>\r\n\r\n    <button\r\n      class=\"btn btn-primary mt-3 w-100\"\r\n      type=\"submit\"\r\n      [disabled]=\"!loginForm.valid\"\r\n    >\r\n      Login\r\n    </button>\r\n  </form>\r\n  <a routerLink=\"/login/forgot-password\" class=\"forgotPasswordLink\"\r\n    >Forgot password?</a\r\n  >\r\n</div>\r\n","<div class=\"container m-nav\" *ngIf=\"user\">\r\n  <h1 class=\"h2 pt-3\">Add Cards</h1>\r\n  <div class=\"btn-group mt-3\" dropdown>\r\n    <button\r\n      id=\"button-basic\"\r\n      dropdownToggle\r\n      type=\"button\"\r\n      class=\"btn btn-primary dropdown-toggle selectBtn\"\r\n      aria-controls=\"dropdown-basic\"\r\n      [class.disabled]=\"user.decks.length === 0\"\r\n    >\r\n      {{ selectedDeck ? selectedDeck.name : \"Select a deck\" }}\r\n      <span class=\"caret\"></span>\r\n    </button>\r\n    <ul\r\n      id=\"dropdown-basic\"\r\n      *dropdownMenu\r\n      class=\"dropdown-menu\"\r\n      role=\"menu\"\r\n      aria-labelledby=\"button-basic\"\r\n    >\r\n      <ng-container *ngFor=\"let deck of user.decks\">\r\n        <li role=\"menuitem\">\r\n          <button class=\"dropdown-item\" (click)=\"selectDeck(deck.id)\">\r\n            {{ deck.name }}\r\n          </button>\r\n        </li>\r\n      </ng-container>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"col-12 col-lg-7 col-xl-5\" *ngIf=\"selectedDeck; else noDecks\">\r\n    <p class=\"text-muted mt-3\">\r\n      Instructions: Add new cards to queue, click 'Save all' to add to database.\r\n    </p>\r\n    <p class=\"cardCount\">Total cards: {{ selectedDeck.cards.length }}</p>\r\n    <div class=\"d-flex queueWrapper\">\r\n      <p\r\n        *ngIf=\"addCardQueue.length > 0\"\r\n        class=\"text-warning cardCount unsavedCardCount\"\r\n      >\r\n        Queue (unsaved cards): {{ addCardQueue.length }}\r\n      </p>\r\n      <button\r\n        *ngIf=\"addCardQueue.length > 0\"\r\n        class=\"btn btn-warning btnSaveAll\"\r\n        type=\"button\"\r\n        (click)=\"saveAllToDatabase()\"\r\n      >\r\n        Save all\r\n      </button>\r\n    </div>\r\n\r\n    <form class=\"mt-4\" [formGroup]=\"addCardForm\" (ngSubmit)=\"addCardToQueue()\">\r\n      <div class=\"form-group mb-3\">\r\n        <label for=\"front\">Front</label>\r\n        <textarea\r\n          class=\"form-control\"\r\n          rows=\"4\"\r\n          name=\"front\"\r\n          formControlName=\"front\"\r\n        ></textarea>\r\n      </div>\r\n      <div class=\"form-group mb-3\">\r\n        <label for=\"back\">Back</label>\r\n        <textarea\r\n          class=\"form-control\"\r\n          rows=\"4\"\r\n          name=\"back\"\r\n          formControlName=\"back\"\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div class=\"d-flex pt-3\">\r\n        <button class=\"btn btn-primary\" type=\"submit\">Add to queue</button>\r\n        <a\r\n          class=\"btn btn-outline-secondary d-inline-block backBtn\"\r\n          routerLink=\"/user/decks/{{ deckId }}\"\r\n          >Back to deck</a\r\n        >\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <ng-template #noDecks>\r\n    <div class=\"col-md-5 pt-4\">\r\n      <h5>You don't have any decks yet.</h5>\r\n      <p>\r\n        Go to the <a [routerLink]=\"['/user/decks']\">decks page</a> to create a\r\n        new one.\r\n      </p>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Deck } from 'src/app/_models/deck';\r\nimport { LoggedInUser } from 'src/app/_models/loggedInUser';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { CardService } from 'src/app/_services/card.service';\r\nimport { DeckService } from 'src/app/_services/deck.service';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-add-cards',\r\n  templateUrl: './add-cards.component.html',\r\n  styleUrls: ['./add-cards.component.css'],\r\n})\r\nexport class AddCardsComponent implements OnInit {\r\n  loggedInUser: LoggedInUser;\r\n  addCardForm: FormGroup;\r\n  addCardQueue = [];\r\n  deckId: number;\r\n\r\n  selectedDeck: Deck;\r\n  user: User;\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _cardService: CardService,\r\n    private _fb: FormBuilder,\r\n    private _userService: UserService,\r\n    private _accountService: AccountService,\r\n    private _deckService: DeckService,\r\n    private _toastr: ToastrService,\r\n    private _titleService: Title\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(`Add Cards | FastFlashCards.com`);\r\n    this.deckId = parseInt(this._route.snapshot.paramMap.get('id'));\r\n    this.getLoggedInUser();\r\n    this.loadUser();\r\n    this.initializeForm();\r\n  }\r\n\r\n  getLoggedInUser() {\r\n    this._accountService.currentUser$.subscribe((user) => {\r\n      this.loggedInUser = user;\r\n    });\r\n  }\r\n\r\n  loadUser() {\r\n    this._userService.getUser(this.loggedInUser.id).subscribe((user) => {\r\n      this.user = user;\r\n      if (this.user.decks.length === 0) return;\r\n      else if (this.deckId) {\r\n        this.selectDeck(this.deckId);\r\n      } else {\r\n        this.selectDeck(this._userService.userCache.decks[0].id);\r\n      }\r\n    });\r\n  }\r\n\r\n  selectDeck(id: number) {\r\n    this.selectedDeck = this.user.decks.find((deck) => deck.id === id);\r\n    if (!this.selectedDeck) {\r\n      console.error('Deck ID from route is not in cache.');\r\n      this._toastr.error('Deck not found.');\r\n      this.selectedDeck = this.user.decks[0];\r\n    }\r\n    this.deckId = this.selectedDeck.id;\r\n    this._deckService.setCurrentDeckId(this.selectedDeck.id);\r\n  }\r\n\r\n  initializeForm() {\r\n    this.addCardForm = this._fb.group({\r\n      front: [''],\r\n      back: [''],\r\n    });\r\n  }\r\n\r\n  addCardToQueue() {\r\n    const newCard = {\r\n      front: this.addCardForm.value.front,\r\n      back: this.addCardForm.value.back,\r\n      appUserId: this.user.id,\r\n    };\r\n    this.addCardQueue.push(newCard);\r\n\r\n    this.addCardForm.reset();\r\n  }\r\n\r\n  saveAllToDatabase() {\r\n    this._cardService\r\n      .createCards(this.deckId, this.selectedDeck.appUserId, this.addCardQueue)\r\n      .subscribe((res: any) => {\r\n        this.selectedDeck.cards = this.selectedDeck.cards.concat(res);\r\n        this.addCardQueue = [];\r\n      });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Card } from '../_models/card';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CardService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  createCards(deckId: number, appUserId: string, cards: Card[]) {\r\n    return this._http.post(`${this.baseUrl}/card`, {\r\n      deckId: deckId,\r\n      appUserId: appUserId,\r\n      cards: cards,\r\n    });\r\n    // return this._http.post(`${this.baseUrl}/deck?deckName=${name}`, {}).pipe(\r\n    //   map((deck: any) => {\r\n    //     deck.cards = [];\r\n    //     this._userService.userCache.decks.push(deck);\r\n    //   })\r\n    // );\r\n  }\r\n\r\n  editCard(card: Card) {\r\n    return this._http.put(`${this.baseUrl}/card/${card.id}`, {\r\n      id: card.id,\r\n      front: card.front,\r\n      back: card.back,\r\n      order: card.order,\r\n      deckId: card.deckId,\r\n      appUserId: card.appUserId,\r\n    });\r\n  }\r\n\r\n  deleteCard(id: number) {\r\n    return this._http.delete(`${this.baseUrl}/card/${id}`);\r\n  }\r\n}\r\n","<div class=\"container m-nav\">\r\n  <h1 class=\"h3 pt-3\">Internal Server Error</h1>\r\n  <div *ngIf=\"error === 'register-email'\" class=\"text-danger\">\r\n    Your account has been created but there was an error sending your\r\n    confirmation email. Please contact customer support.\r\n  </div>\r\n\r\n  <div *ngIf=\"!error\" class=\"text-danger\">\r\n    There was an error on the server. Please try again later.\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.css'],\r\n})\r\nexport class ServerErrorComponent implements OnInit {\r\n  error: string;\r\n  constructor(private _route: ActivatedRoute, private _titleService: Title) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(`Server Error | FastFlashCards.com`);\r\n    this.error = this._route.snapshot.paramMap.get('error');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private _router: Router, private _toastr: ToastrService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError((error) => {\r\n        if (error) {\r\n          switch (error.status) {\r\n            case 400:\r\n              if (error.error.errors) {\r\n                const modelStateErrors = [];\r\n                for (const key in error.error.errors) {\r\n                  if (error.error.errors[key]) {\r\n                    modelStateErrors.push(error.error.errors[key]);\r\n                  }\r\n                }\r\n                throw modelStateErrors.flat();\r\n              } else if (error.error.type === 'email') {\r\n                const errorArr = [];\r\n                errorArr.push(error.error.message);\r\n                throw errorArr;\r\n              } else if (error.error.type === 'username') {\r\n                const errorArr = [];\r\n                errorArr.push(error.error.message);\r\n                throw errorArr;\r\n              } else if (error.error.type === 'user has password') {\r\n                const errorArr = [];\r\n                errorArr.push(error.error.message);\r\n                throw errorArr;\r\n              } else if (typeof error.error === 'object') {\r\n                const modelStateErrors = [];\r\n                for (const key in error.error) {\r\n                  if (error.error[key]) {\r\n                    modelStateErrors.push(error.error[key].description);\r\n                  }\r\n                }\r\n                throw modelStateErrors.flat();\r\n              } else {\r\n                console.error('error in 400 else block', error);\r\n              }\r\n              break;\r\n\r\n            case 401:\r\n              console.log(error);\r\n              // all 401 unauthorized errors are handled in login component try/catch block\r\n              if (error.error?.source === 'login') {\r\n                // handle error in login component\r\n                break;\r\n              } else if (error.error?.source === 'confirm-email') {\r\n                // handle error in confirm-email component\r\n                break;\r\n              } else if (error.error?.source === 'DeleteData') {\r\n                // handle error in delete-data component\r\n                break;\r\n              } else {\r\n                this._toastr.error('Unauthorized', error.status);\r\n              }\r\n              break;\r\n\r\n            case 404:\r\n              this._router.navigateByUrl('/not-found');\r\n              break;\r\n\r\n            case 500:\r\n              if (\r\n                error.error?.source === 'register' &&\r\n                error.error?.type === 'send email'\r\n              ) {\r\n                this._router.navigateByUrl('/server-error/register-email');\r\n                const errorArr = [];\r\n                errorArr.push(error.error.message);\r\n                throw errorArr;\r\n              }\r\n\r\n              const navigationExtras: NavigationExtras = {\r\n                state: { error: error.error },\r\n              };\r\n\r\n              this._toastr.error('error in case 500');\r\n              this._router.navigateByUrl('/server-error', navigationExtras);\r\n              break;\r\n\r\n            default:\r\n              console.log(error);\r\n              this._toastr.error('Something unexpected went wrong');\r\n              break;\r\n          }\r\n        }\r\n\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(\r\n    private _accountService: AccountService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this._accountService.currentUser$.pipe(\r\n      map((user) => {\r\n        if (user.isAdmin) return true;\r\n        this.router.navigateByUrl('/not-found');\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminService {\r\n  baseUrl = environment.apiUrl;\r\n  userCache;\r\n\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  getUsers() {\r\n    return this._http.get(`${this.baseUrl}/admin/getusers`).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n\r\n  getUser(id: string) {\r\n    if (\r\n      this.userCache !== undefined &&\r\n      this.userCache !== null &&\r\n      id === this.userCache.id\r\n    ) {\r\n      return of(this.userCache);\r\n    }\r\n\r\n    return this._http.get(`${this.baseUrl}/admin?id=${id}`).pipe(\r\n      map((user) => {\r\n        this.userCache = user;\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n\r\n  editEmailConfirmed(emailConfirmed: boolean, id: string) {\r\n    return this._http.put(\r\n      `${this.baseUrl}/admin/UpdateEmailConfirmed?emailConfirmed=${emailConfirmed}&id=${id}`,\r\n      {}\r\n    );\r\n  }\r\n\r\n  editPassword(newPassword: string, id: string) {\r\n    const updatePasswordObj = {\r\n      newPassword: newPassword,\r\n      id: id,\r\n    };\r\n    return this._http.put(\r\n      `${this.baseUrl}/admin/UpdatePassword`,\r\n      updatePasswordObj\r\n    );\r\n  }\r\n\r\n  deleteUser(userId: string) {\r\n    return this._http.post(`${this.baseUrl}/admin/DeleteUser?id=${userId}`, {});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private _accountService: AccountService,\r\n    private router: Router\r\n  ) {}\r\n  canActivate(): Observable<boolean> {\r\n    return this._accountService.currentUser$.pipe(\r\n      map((user) => {\r\n        if (user) return true;\r\n        this.router.navigateByUrl('/login');\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-success',\r\n  templateUrl: './success.component.html',\r\n  styleUrls: ['./success.component.css'],\r\n})\r\nexport class SuccessComponent implements OnInit {\r\n  email: string;\r\n\r\n  constructor(private _route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.email = this._route.snapshot.paramMap.get('email');\r\n  }\r\n}\r\n","<div class=\"container m-nav\">\r\n  <h4 class=\"pt-3\">Registration Success!</h4>\r\n  <p>\r\n    Please verify your email address at <span class=\"email\">{{ email }}</span\r\n    >. You may need to check your spam folder.\r\n  </p>\r\n  <p>You are now logged in.</p>\r\n  <a routerLink=\"/user/decks\" class=\"btn btn-success\">Get started</a>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Card } from 'src/app/_models/card';\r\nimport { Deck } from 'src/app/_models/deck';\r\nimport { LoggedInUser } from 'src/app/_models/loggedInUser';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { CardService } from 'src/app/_services/card.service';\r\nimport { DeckService } from 'src/app/_services/deck.service';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { DeleteCardModalComponent } from './delete-card-modal/delete-card-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-edit-cards',\r\n  templateUrl: './edit-cards.component.html',\r\n  styleUrls: ['./edit-cards.component.css'],\r\n})\r\nexport class EditCardsComponent implements OnInit {\r\n  loggedInUser: LoggedInUser;\r\n  user: User;\r\n  deckId: number;\r\n  editCardForm: FormGroup;\r\n\r\n  selectedDeck: Deck;\r\n  selectedCard: Card;\r\n\r\n  // delete card\r\n  bsModalRef: BsModalRef;\r\n\r\n  // ngx-pagination\r\n  collection: Card[];\r\n  p = 1;\r\n  itemsPerPageForm = new FormControl(10);\r\n\r\n  constructor(\r\n    private _userService: UserService,\r\n    private _accountService: AccountService,\r\n    private _route: ActivatedRoute,\r\n    private _fb: FormBuilder,\r\n    private _cardService: CardService,\r\n    private _deckService: DeckService,\r\n    private _toastr: ToastrService,\r\n    private _titleService: Title,\r\n    private _modalService: BsModalService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle('Edit Cards | FastFlashCards.com');\r\n    this.deckId = parseInt(this._route.snapshot.paramMap.get('id'));\r\n    this.getLoggedInUser();\r\n    this.initializeForm();\r\n    this.loadUser();\r\n  }\r\n\r\n  getLoggedInUser() {\r\n    this._accountService.currentUser$.subscribe((user) => {\r\n      this.loggedInUser = user;\r\n    });\r\n  }\r\n\r\n  loadUser() {\r\n    this._userService.getUser(this.loggedInUser.id).subscribe((user) => {\r\n      this.user = user;\r\n      if (this.user.decks.length === 0) return;\r\n      else if (this.deckId) {\r\n        this.selectDeck(this.deckId);\r\n      } else {\r\n        this.selectDeck(this._userService.userCache.decks[0].id);\r\n      }\r\n    });\r\n  }\r\n\r\n  initializeForm() {\r\n    this.editCardForm = this._fb.group({\r\n      front: [{ value: '', disabled: true }],\r\n      back: [{ value: '', disabled: true }],\r\n      order: [{ value: '', disabled: true }],\r\n      deckId: [{ value: '', disabled: true }],\r\n    });\r\n  }\r\n\r\n  selectDeck(id: number) {\r\n    this.selectedDeck = this.user.decks.find((deck) => deck.id === id);\r\n    if (!this.selectedDeck) {\r\n      console.error('Deck ID from route is not in cache.');\r\n      this._toastr.error('Deck not found.');\r\n      this.selectedDeck = this.user.decks[0];\r\n    }\r\n    this.collection = this.selectedDeck.cards;\r\n    this._deckService.setCurrentDeckId(this.selectedDeck.id);\r\n    this.selectedCard = null;\r\n    this.editCardForm.controls['front'].disable();\r\n    this.editCardForm.controls['back'].disable();\r\n    this.editCardForm.controls['order'].disable();\r\n    this.editCardForm.controls['deckId'].disable();\r\n  }\r\n\r\n  selectCard(id: number) {\r\n    if (this.selectedCard && this.selectedCard.id === id) {\r\n      this.selectedCard = null;\r\n      this.editCardForm.controls['front'].disable();\r\n      this.editCardForm.controls['back'].disable();\r\n      this.editCardForm.controls['order'].disable();\r\n      this.editCardForm.controls['deckId'].disable();\r\n      return;\r\n    }\r\n    this.selectedCard = this.selectedDeck.cards.find((card) => card.id === id);\r\n    this.setFormValues();\r\n    this.editCardForm.enable();\r\n  }\r\n\r\n  getForm(e: FormGroup) {\r\n    this.editCardForm = e;\r\n  }\r\n\r\n  setFormValues() {\r\n    this.editCardForm.setValue({\r\n      front: this.selectedCard.front,\r\n      back: this.selectedCard.back,\r\n      order: this.selectedCard.order,\r\n      deckId: this.selectedCard.deckId,\r\n    });\r\n  }\r\n\r\n  pageBoundsCorrection(e) {\r\n    this.p = e.value;\r\n  }\r\n\r\n  saveChanges() {\r\n    const updatedCard = {\r\n      id: this.selectedCard.id,\r\n      front: this.editCardForm.value.front,\r\n      back: this.editCardForm.value.back,\r\n      order: this.editCardForm.value.order,\r\n      deckId: parseInt(this.editCardForm.value.deckId),\r\n      appUserId: this.selectedCard.appUserId,\r\n    };\r\n\r\n    this._cardService.editCard(updatedCard).subscribe(() => {\r\n      // in the subscribe callback, update the cache\r\n      if (this.selectedCard.deckId === updatedCard.deckId) {\r\n        // then I can search the userCache by matching deckId's\r\n        for (let i = 0; i < this._userService.userCache.decks.length; i++) {\r\n          let needToSortFlag = false;\r\n          if (this._userService.userCache.decks[i].id === updatedCard.deckId) {\r\n            for (\r\n              let j = 0;\r\n              j < this._userService.userCache.decks[i].cards.length;\r\n              j++\r\n            ) {\r\n              if (\r\n                this._userService.userCache.decks[i].cards[j].id ===\r\n                updatedCard.id\r\n              ) {\r\n                this._userService.userCache.decks[i].cards[j].front =\r\n                  updatedCard.front;\r\n                this._userService.userCache.decks[i].cards[j].back =\r\n                  updatedCard.back;\r\n                if (\r\n                  this._userService.userCache.decks[i].cards[j].order !==\r\n                  updatedCard.order\r\n                ) {\r\n                  this._userService.userCache.decks[i].cards[j].order =\r\n                    updatedCard.order;\r\n                  needToSortFlag = true;\r\n                }\r\n                break;\r\n              }\r\n            }\r\n\r\n            if (needToSortFlag) {\r\n              this._userService.userCache.decks[i].cards.sort(\r\n                (a, b) => a.order - b.order\r\n              );\r\n              needToSortFlag = false;\r\n            }\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        // the deckId has been changed, so must search userCache to find card by id\r\n        for (let i = 0; i < this._userService.userCache.decks.length; i++) {\r\n          let card = this._userService.userCache.decks[i].cards.find(\r\n            (card) => card.id === updatedCard.id\r\n          );\r\n          if (card) {\r\n            card.front = updatedCard.front;\r\n            card.back = updatedCard.back;\r\n            card.deckId = updatedCard.deckId;\r\n            let cardIdx =\r\n              this._userService.userCache.decks[i].cards.indexOf(card);\r\n            this._userService.userCache.decks[i].cards.splice(cardIdx, 1);\r\n\r\n            // loop through decks again and find the updatedCard's new deck\r\n            for (let j = 0; j < this._userService.userCache.decks.length; j++) {\r\n              if (\r\n                this._userService.userCache.decks[j].id === updatedCard.deckId\r\n              ) {\r\n                // update order property according to new deck (unless deck is empty)\r\n                if (this._userService.userCache.decks[j].cards.length > 0) {\r\n                  this._userService.userCache.decks[j].cards.sort(\r\n                    (a, b) => a.order - b.order\r\n                  );\r\n                  const arrLength =\r\n                    this._userService.userCache.decks[j].cards.length;\r\n                  const lastCard =\r\n                    this._userService.userCache.decks[j].cards[arrLength - 1];\r\n                  card.order = lastCard.order + 1;\r\n                  this._userService.userCache.decks[j].cards.push(card);\r\n                  break;\r\n                } else {\r\n                  card.order = 1;\r\n                  this._userService.userCache.decks[j].cards.push(card);\r\n                }\r\n              }\r\n            }\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.editCardForm.reset();\r\n      this.selectedCard = null;\r\n      this.editCardForm.controls['front'].disable();\r\n      this.editCardForm.controls['back'].disable();\r\n      this.editCardForm.controls['order'].disable();\r\n      this.editCardForm.controls['deckId'].disable();\r\n    });\r\n  }\r\n\r\n  openDeleteCardModal() {\r\n    this.bsModalRef = this._modalService.show(DeleteCardModalComponent);\r\n    this.bsModalRef.content.selectedCard = this.selectedCard;\r\n    this.bsModalRef.content.editCardForm = this.editCardForm;\r\n  }\r\n}\r\n","<div class=\"container m-nav\" *ngIf=\"user\">\r\n  <h1 class=\"h2 pt-3\">Edit Cards</h1>\r\n  <div class=\"btn-group mt-3\" dropdown>\r\n    <button\r\n      id=\"button-basic\"\r\n      dropdownToggle\r\n      type=\"button\"\r\n      class=\"btn btn-primary dropdown-toggle selectBtn\"\r\n      aria-controls=\"dropdown-basic\"\r\n      [class.disabled]=\"user.decks.length === 0\"\r\n    >\r\n      {{ selectedDeck ? selectedDeck.name : \"Select a deck\" }}\r\n      <span class=\"caret\"></span>\r\n    </button>\r\n    <ul\r\n      id=\"dropdown-basic\"\r\n      *dropdownMenu\r\n      class=\"dropdown-menu\"\r\n      role=\"menu\"\r\n      aria-labelledby=\"button-basic\"\r\n    >\r\n      <ng-container *ngFor=\"let deck of user.decks\">\r\n        <li role=\"menuitem\">\r\n          <button class=\"dropdown-item\" (click)=\"selectDeck(deck.id)\">\r\n            {{ deck.name }}\r\n          </button>\r\n        </li>\r\n      </ng-container>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"row justify-content-between\">\r\n    <div class=\"col-xl-5 pt-4\" *ngIf=\"selectedDeck; else noDecks\">\r\n      <div class=\"d-flex justify-content-between\">\r\n        <h4 class=\"selectCardHeader\">Select Card</h4>\r\n        <h4>Total cards: {{ selectedDeck.cards.length }}</h4>\r\n      </div>\r\n      <div *ngIf=\"selectedDeck.cards.length > 0\">\r\n        <h5 class=\"w-100 d-flex mt-1\">\r\n          <span class=\"text-muted text-center listHeadingOrder\">#</span>\r\n          <span class=\"w-50 text-muted text-center listHeadingFront\"\r\n            >Front</span\r\n          >\r\n          <span class=\"w-50 text-muted text-center listHeadingBack\">Back</span>\r\n        </h5>\r\n        <ul class=\"list-group\">\r\n          <ng-container\r\n            *ngFor=\"\r\n              let card of collection\r\n                | paginate\r\n                  : { itemsPerPage: itemsPerPageForm.value, currentPage: p }\r\n            \"\r\n          >\r\n            <button\r\n              class=\"\r\n                list-group-item list-group-item-action\r\n                d-flex\r\n                displayCardBtn\r\n              \"\r\n              [ngClass]=\"{ active: card.id === selectedCard?.id }\"\r\n              type=\"button\"\r\n              (click)=\"selectCard(card.id)\"\r\n            >\r\n              <span class=\"displayCardOrder\">{{ card.order }}</span>\r\n              <p class=\"displayCardFront\">{{ card.front }}</p>\r\n              <p class=\"displayCardBack\">{{ card.back }}</p>\r\n            </button>\r\n          </ng-container>\r\n        </ul>\r\n\r\n        <div\r\n          class=\"\r\n            d-flex\r\n            justify-content-between\r\n            align-items-center\r\n            mt-3\r\n            paginationWrapper\r\n          \"\r\n        >\r\n          <form class=\"itemsPerPageForm\">\r\n            <select\r\n              [formControl]=\"itemsPerPageForm\"\r\n              [value]=\"itemsPerPageForm.value\"\r\n            >\r\n              <option [value]=\"10\">10</option>\r\n              <option [value]=\"25\">25</option>\r\n              <option [value]=\"50\">50</option>\r\n            </select>\r\n            <label class=\"itemsPerPageLabel\">Items Per Page</label>\r\n          </form>\r\n\r\n          <pagination-controls\r\n            class=\"my-pagination\"\r\n            (pageChange)=\"p = $event\"\r\n            (pageBoundsCorrection)=\"pageBoundsCorrection($event)\"\r\n            responsive=\"true\"\r\n            maxSize=\"5\"\r\n            screenReaderPaginationLabel=\"Pagination\"\r\n            screenReaderPageLabel=\"page\"\r\n            screenReaderCurrentLabel=\"You're on page\"\r\n          >\r\n            ></pagination-controls\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <ng-template #noDecks>\r\n      <div class=\"col-12 col-xl-5 pt-4\">\r\n        <h5>You don't have any decks yet.</h5>\r\n        <p>\r\n          Go to the <a [routerLink]=\"['/user/decks']\">decks page</a> to create a\r\n          new one.\r\n        </p>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <div class=\"col-12 col-xl-5\">\r\n      <form class=\"pt-4\" [formGroup]=\"editCardForm\" (ngSubmit)=\"saveChanges()\">\r\n        <h4 class=\"editCardHeader\">Edit Card</h4>\r\n        <div class=\"form-group mb-3\">\r\n          <label for=\"deckId\" class=\"form-label mt-1\">Change deck</label>\r\n          <select\r\n            class=\"form-select\"\r\n            id=\"deckId\"\r\n            name=\"deckId\"\r\n            formControlName=\"deckId\"\r\n            [value]=\"selectedCard ? selectedCard.deckId : null\"\r\n          >\r\n            <ng-container *ngFor=\"let deck of user.decks\">\r\n              <option [value]=\"deck.id\">{{ deck.name }}</option>\r\n            </ng-container>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group mb-3\">\r\n          <label for=\"front\">Front</label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            rows=\"4\"\r\n            name=\"front\"\r\n            formControlName=\"front\"\r\n            [value]=\"selectedCard ? selectedCard.front : ''\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group mb-3\">\r\n          <label for=\"back\">Back</label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            rows=\"4\"\r\n            name=\"back\"\r\n            formControlName=\"back\"\r\n            [value]=\"selectedCard ? selectedCard.back : ''\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div class=\"form-group mb-3\">\r\n          <label for=\"order\">Change Card # / Group #</label>\r\n          <input\r\n            type=\"number\"\r\n            class=\"form-control\"\r\n            name=\"order\"\r\n            formControlName=\"order\"\r\n            [value]=\"selectedCard ? selectedCard.order : ''\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"d-flex pt-3 justify-content-between\">\r\n          <button\r\n            [disabled]=\"editCardForm.pristine || !selectedCard\"\r\n            class=\"btn btn-success\"\r\n            type=\"submit\"\r\n          >\r\n            Save changes\r\n          </button>\r\n          <button\r\n            *ngIf=\"!deleteState\"\r\n            [disabled]=\"!selectedCard\"\r\n            type=\"button\"\r\n            class=\"btn btn-outline-danger deleteBtn\"\r\n            (click)=\"openDeleteCardModal()\"\r\n          >\r\n            Delete card\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<div class=\"container m-nav\" *ngIf=\"user\">\r\n  <h1 class=\"h2 pt-3\">Admin View User Decks</h1>\r\n  <a routerLink=\"/admin/edit-user/{{ userId }}\">&larr; Back to edit user</a>\r\n  <div class=\"col-xl-6 pt-3\">\r\n    <table class=\"table table-hover\">\r\n      <thead>\r\n        <tr>\r\n          <th>Deck Name</th>\r\n          <th>Cards</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let deck of user.decks\">\r\n          <td>\r\n            <a\r\n              routerLink=\"/admin/edit-user/{{ userId }}/view-deck/{{ deck.id }}\"\r\n              >{{ deck.name }}</a\r\n            >\r\n          </td>\r\n          <td>{{ deck.cards.length }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-view-user-decks',\r\n  templateUrl: './view-user-decks.component.html',\r\n  styleUrls: ['./view-user-decks.component.css'],\r\n})\r\nexport class ViewUserDecksComponent implements OnInit {\r\n  user;\r\n  userId;\r\n\r\n  constructor(\r\n    private _adminService: AdminService,\r\n    private _route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userId = this._route.snapshot.paramMap.get('id');\r\n    this._adminService.getUser(this.userId).subscribe((res: any) => {\r\n      this.user = res;\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { DeckService } from 'src/app/_services/deck.service';\r\nimport { UserService } from 'src/app/_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-delete-deck-modal',\r\n  templateUrl: './delete-deck-modal.component.html',\r\n  styleUrls: ['./delete-deck-modal.component.css'],\r\n})\r\nexport class DeleteDeckModalComponent implements OnInit {\r\n  deckId: number;\r\n\r\n  constructor(\r\n    public bsModalRef: BsModalRef,\r\n    private _deckService: DeckService,\r\n    private _router: Router,\r\n    private _userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  deleteDeck(id: number) {\r\n    this._deckService.deleteDeck(id).subscribe(() => {\r\n      // in the subscribe callback, update the cache\r\n      let deckToDelete = this._userService.userCache.decks.find(\r\n        (deck) => deck.id === id\r\n      );\r\n      let deckIdx = this._userService.userCache.decks.indexOf(deckToDelete);\r\n      this._userService.userCache.decks.splice(deckIdx, 1);\r\n      this.bsModalRef.hide();\r\n      this._router.navigate(['user/decks']);\r\n    });\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title pull-left\">Delete Deck</h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close pull-right closeBtn\"\r\n    aria-label=\"Close\"\r\n    (click)=\"bsModalRef.hide()\"\r\n  >\r\n    <span class=\"timesSpan\" aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  Are you sure you want to delete this deck and all of its cards?\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteDeck(deckId)\">\r\n    Delete\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"bsModalRef.hide()\">\r\n    Cancel\r\n  </button>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { LoggedInUser } from './_models/loggedInUser';\r\nimport { AccountService } from './_services/account.service';\r\nimport { SwUpdate } from '@angular/service-worker';\r\nimport { UpdateSwModalComponent } from './_components/update-sw-modal/update-sw-modal.component';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  bsModalRef: BsModalRef;\r\n\r\n  constructor(\r\n    private _accountService: AccountService,\r\n    private swUpdate: SwUpdate,\r\n    private _modalService: BsModalService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setCurrentUser();\r\n    if (this.swUpdate.isEnabled) {\r\n      this.swUpdate.available.subscribe(() => {\r\n        this.openUpdateModal();\r\n      });\r\n    }\r\n  }\r\n\r\n  setCurrentUser() {\r\n    const user: LoggedInUser = JSON.parse(localStorage.getItem('user'));\r\n    if (user) {\r\n      this._accountService.setCurrentUser(user);\r\n    }\r\n  }\r\n\r\n  openUpdateModal() {\r\n    this.bsModalRef = this._modalService.show(UpdateSwModalComponent);\r\n  }\r\n}\r\n","<main>\r\n  <app-navbar></app-navbar>\r\n  <router-outlet></router-outlet>\r\n  <app-footer></app-footer>\r\n</main>\r\n<ngx-spinner [disableAnimation]=\"true\"></ngx-spinner>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-delete-data-success',\r\n  templateUrl: './delete-data-success.component.html',\r\n  styleUrls: ['./delete-data-success.component.css']\r\n})\r\nexport class DeleteDataSuccessComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container m-nav\">\r\n  <h1 class=\"h3 pt-3\">Delete Data</h1>\r\n  <div class=\"mt-4\">\r\n    Your account and all of its associated data have been deleted.\r\n  </div>\r\n  <a routerLink=\"/\">Go to home page</a>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  baseUrl = environment.apiUrl;\r\n  user: User;\r\n  userCache: User;\r\n\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  getUser(id: string) {\r\n    if (this.userCache !== undefined && this.userCache !== null) {\r\n      return of(this.userCache);\r\n    }\r\n\r\n    return this._http.get<User>(`${this.baseUrl}/user?id=${id}`).pipe(\r\n      map((user) => {\r\n        user.decks.forEach((deck) => {\r\n          deck.cards.sort((a, b) => a.order - b.order);\r\n        });\r\n        this.userCache = user;\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LoadingService } from '../_services/loading.service';\r\nimport { delay, finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n  constructor(private _loadingService: LoadingService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    this._loadingService.loading();\r\n    return next.handle(request).pipe(\r\n      // delay(500),\r\n      finalize(() => {\r\n        this._loadingService.idle();\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormGroup,\r\n  ValidatorFn,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(\r\n    private _accountService: AccountService,\r\n    private _fb: FormBuilder,\r\n    private _router: Router,\r\n    private _titleService: Title\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(`Register | FastFlashCards.com`);\r\n    this.initializeForm();\r\n  }\r\n\r\n  register() {\r\n    this._accountService.register(this.registerForm.value).subscribe(\r\n      (response) => {\r\n        this._router.navigateByUrl(`/register/success/${response.email}`);\r\n      },\r\n      (error) => {\r\n        this.validationErrors = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  initializeForm() {\r\n    this.registerForm = this._fb.group({\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.maxLength(40)],\r\n      ],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: [\r\n        '',\r\n        [Validators.required, this.matchValues('password')],\r\n      ],\r\n    });\r\n    this.registerForm.controls.password.valueChanges.subscribe(() => {\r\n      this.registerForm.controls.confirmPassword.updateValueAndValidity();\r\n    });\r\n  }\r\n\r\n  matchValues(matchTo: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      return control?.value === control?.parent?.controls[matchTo].value\r\n        ? null\r\n        : { isMatching: true };\r\n    };\r\n  }\r\n}\r\n","<div class=\"col-lg-4 col-md-6 mx-auto m-nav registerWrapper\">\r\n  <h1 class=\"text-center pt-3 pt-md-5 h3\">Register</h1>\r\n\r\n  <form\r\n    [formGroup]=\"registerForm\"\r\n    (ngSubmit)=\"registerForm.valid && register()\"\r\n  >\r\n    <div class=\"form-group mb-3\">\r\n      <label for=\"email\">Email</label>\r\n      <input\r\n        [class.is-invalid]=\"\r\n          registerForm.get('email').errors && registerForm.get('email').touched\r\n        \"\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        formControlName=\"email\"\r\n      />\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"registerForm.get('email').hasError('required')\"\r\n      >\r\n        Please enter an email.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"registerForm.get('email').hasError('maxlength')\"\r\n      >\r\n        Has a max length of 40 characters.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"registerForm.get('email').hasError('email')\"\r\n      >\r\n        Please enter a valid email address.\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group mb-3\">\r\n      <label for=\"password\">Password</label>\r\n      <input\r\n        [class.is-invalid]=\"\r\n          registerForm.get('password').errors &&\r\n          registerForm.get('password').touched\r\n        \"\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        formControlName=\"password\"\r\n      />\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"registerForm.get('password').hasError('required')\"\r\n      >\r\n        Please enter your password.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"registerForm.get('password').hasError('minlength')\"\r\n      >\r\n        Password must be at least 6 characters, contain an uppercase letter, and\r\n        a number.\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group mb-3\">\r\n      <label for=\"confirmPassword\">Confirm Password</label>\r\n      <input\r\n        [class.is-invalid]=\"\r\n          registerForm.get('confirmPassword').errors &&\r\n          registerForm.get('confirmPassword').touched\r\n        \"\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        formControlName=\"confirmPassword\"\r\n      />\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"registerForm.get('confirmPassword').hasError('required')\"\r\n      >\r\n        Please confirm your password.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"registerForm.get('confirmPassword').hasError('isMatching')\"\r\n      >\r\n        Your entered passwords don't match.\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"validationErrors.length > 0\">\r\n      <ul class=\"text-danger\">\r\n        <li *ngFor=\"let error of validationErrors\">\r\n          {{ error }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <button\r\n      [disabled]=\"!registerForm.valid\"\r\n      class=\"btn btn-primary w-100 mt-3\"\r\n      type=\"submit\"\r\n    >\r\n      Register\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css'],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  forgotPasswordForm: FormGroup;\r\n  validationErrors: string[] = [];\r\n  errors = {\r\n    email: false,\r\n  };\r\n\r\n  constructor(\r\n    private _fb: FormBuilder,\r\n    private _accountService: AccountService,\r\n    private _router: Router,\r\n    private _titleService: Title\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(`Forgot Password | FastFlashCards.com`);\r\n    this.initializeForm();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.forgotPasswordForm = this._fb.group({\r\n      email: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(40),\r\n          Validators.email,\r\n        ],\r\n      ],\r\n    });\r\n  }\r\n\r\n  forgotPassword() {\r\n    this.errors = {\r\n      email: false,\r\n    };\r\n\r\n    this._accountService\r\n      .forgotPassword(this.forgotPasswordForm.get('email').value)\r\n      .subscribe(\r\n        (response) => {\r\n          this._router.navigateByUrl('/login/forgot-password-confirmation');\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"container m-nav\">\r\n  <h4 class=\"pt-3\">Forgot Password</h4>\r\n  <form\r\n    [formGroup]=\"forgotPasswordForm\"\r\n    (ngSubmit)=\"forgotPasswordForm.valid && forgotPassword()\"\r\n    class=\"col-md-4 mt-4 forgotPasswordForm\"\r\n  >\r\n    <div class=\"form-group mb-3\">\r\n      <label for=\"email\">Email Address</label>\r\n      <input\r\n        [class.is-invalid]=\"\r\n          forgotPasswordForm.get('email').errors &&\r\n          forgotPasswordForm.get('email').touched\r\n        \"\r\n        class=\"form-control mr-sm-2\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        formControlName=\"email\"\r\n      />\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"forgotPasswordForm.get('email').hasError('required')\"\r\n      >\r\n        Please enter an email.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"forgotPasswordForm.get('email').hasError('minlength')\"\r\n      >\r\n        Requires at least 3 characters.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"forgotPasswordForm.get('email').hasError('maxlength')\"\r\n      >\r\n        Has a max length of 40 characters.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"forgotPasswordForm.get('email').hasError('email')\"\r\n      >\r\n        Please enter a valid email address.\r\n      </div>\r\n    </div>\r\n    <button\r\n      class=\"btn btn-warning\"\r\n      type=\"submit\"\r\n      [disabled]=\"!forgotPasswordForm.valid\"\r\n    >\r\n      Request reset password email\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { DeckService } from 'src/app/_services/deck.service';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-new-deck-modal',\r\n  templateUrl: './new-deck-modal.component.html',\r\n  styleUrls: ['./new-deck-modal.component.css'],\r\n})\r\nexport class NewDeckModalComponent implements OnInit {\r\n  name: string;\r\n  loadUser;\r\n\r\n  constructor(\r\n    private _deckService: DeckService,\r\n    public bsModalRef: BsModalRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  createNewDeck(name: string) {\r\n    this._deckService.createDeck(name).subscribe(() => {\r\n      this.bsModalRef.hide();\r\n      this.loadUser();\r\n    });\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title pull-left\">New Deck</h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close pull-right closeBtn\"\r\n    aria-label=\"Close\"\r\n    (click)=\"bsModalRef.hide()\"\r\n  >\r\n    <span class=\"timesSpan\" aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <form #createDeckForm>\r\n    <label for=\"name\">Name</label>\r\n    <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" />\r\n  </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"createNewDeck(name)\">\r\n    Save\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"bsModalRef.hide()\">\r\n    Cancel\r\n  </button>\r\n</div>\r\n","<div class=\"container m-nav\" *ngIf=\"deck\">\r\n  <h1 class=\"h2 pt-3\">Admin View Deck:</h1>\r\n  <a routerLink=\"/admin/edit-user/{{ userId }}/view-user-decks\"\r\n    >&larr; Back to decks</a\r\n  >\r\n  <div class=\"col-xl-6 pt-3\">\r\n    <table class=\"table table-hover\">\r\n      <thead>\r\n        <tr>\r\n          <th>Front</th>\r\n          <th>Back</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let card of deck.cards\">\r\n          <td>{{ card.front }}</td>\r\n          <td>{{ card.back }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Deck } from 'src/app/_models/deck';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-view-deck',\r\n  templateUrl: './view-deck.component.html',\r\n  styleUrls: ['./view-deck.component.css'],\r\n})\r\nexport class ViewDeckComponent implements OnInit {\r\n  user;\r\n  userId;\r\n  deck: Deck;\r\n  deckId: number;\r\n\r\n  constructor(\r\n    private _adminService: AdminService,\r\n    private _route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userId = this._route.snapshot.paramMap.get('id');\r\n    this.deckId = parseInt(this._route.snapshot.paramMap.get('deckId'));\r\n    this._adminService.getUser(this.userId).subscribe((res: any) => {\r\n      this.user = res;\r\n      this.deck = this.user.decks.find((deck: Deck) => deck.id === this.deckId);\r\n    });\r\n  }\r\n}\r\n","import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './_components/navbar/navbar.component';\r\nimport { HomeComponent } from './_components/pages/home/home.component';\r\nimport { LoginComponent } from './_components/pages/login/login.component';\r\nimport { RegisterComponent } from './_components/pages/register/register.component';\r\nimport { DecksComponent } from './_components/pages/decks/decks.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NewDeckModalComponent } from './_components/pages/decks/new-deck-modal/new-deck-modal.component';\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\r\nimport { AddCardsComponent } from './_components/pages/add-cards/add-cards.component';\r\nimport { StudyComponent } from './_components/pages/decks/study/study.component';\r\nimport { DeckPageComponent } from './_components/pages/decks/deck-page/deck-page.component';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { EditCardsComponent } from './_components/pages/edit-cards/edit-cards.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { FooterComponent } from './_components/footer/footer.component';\r\nimport { DeleteDeckModalComponent } from './_components/pages/decks/deck-page/delete-deck-modal/delete-deck-modal.component';\r\nimport { EditNameModalComponent } from './_components/pages/decks/deck-page/edit-name-modal/edit-name-modal.component';\r\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { NotFoundComponent } from './_components/pages/not-found/not-found.component';\r\nimport { AdminComponent } from './_components/pages/admin/admin.component';\r\nimport { HasClaimDirective } from './_directives/has-claim.directive';\r\nimport { SuccessComponent } from './_components/pages/register/success/success.component';\r\nimport { ConfirmEmailComponent } from './_components/pages/register/confirm-email/confirm-email.component';\r\nimport { ForgotPasswordComponent } from './_components/pages/login/forgot-password/forgot-password.component';\r\nimport { ForgotPasswordConfirmationComponent } from './_components/pages/login/forgot-password-confirmation/forgot-password-confirmation.component';\r\nimport { ResetPasswordComponent } from './_components/pages/reset-password/reset-password.component';\r\nimport { ResetPasswordConfirmationComponent } from './_components/pages/reset-password/reset-password-confirmation/reset-password-confirmation.component';\r\nimport { AccountSettingsComponent } from './_components/pages/account-settings/account-settings.component';\r\nimport { ChangePasswordComponent } from './_components/pages/account-settings/change-password/change-password.component';\r\nimport { ChangePasswordSuccessComponent } from './_components/pages/account-settings/change-password/change-password-success/change-password-success.component';\r\nimport { ServerErrorComponent } from './_components/pages/server-error/server-error.component';\r\nimport { DeleteCardModalComponent } from './_components/pages/edit-cards/delete-card-modal/delete-card-modal.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { UpdateSwModalComponent } from './_components/update-sw-modal/update-sw-modal.component';\r\nimport { DeleteDataComponent } from './_components/pages/account-settings/delete-data/delete-data.component';\r\nimport { DeleteDataSuccessComponent } from './_components/pages/account-settings/delete-data/delete-data-success/delete-data-success.component';\r\nimport { EditUserComponent } from './_components/pages/admin/edit-user/edit-user.component';\r\nimport { EditEmailConfirmedModalComponent } from './_components/pages/admin/edit-user/edit-email-confirmed-modal/edit-email-confirmed-modal.component';\r\nimport { ViewUserDecksComponent } from './_components/pages/admin/edit-user/view-user-decks/view-user-decks.component';\r\nimport { ViewDeckComponent } from './_components/pages/admin/edit-user/view-deck/view-deck.component';\r\nimport { EditPasswordModalComponent } from './_components/pages/admin/edit-user/edit-password-modal/edit-password-modal.component';\r\nimport { DeleteUserModalComponent } from './_components/pages/admin/edit-user/delete-user-modal/delete-user-modal.component';\r\nimport { SendVerificationEmailComponent } from './_components/pages/login/send-verification-email/send-verification-email.component';\r\nimport { SendVerificationEmailConfirmationComponent } from './_components/pages/login/send-verification-email-confirmation/send-verification-email-confirmation.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    DecksComponent,\r\n    NewDeckModalComponent,\r\n    AddCardsComponent,\r\n    StudyComponent,\r\n    DeckPageComponent,\r\n    EditCardsComponent,\r\n    FooterComponent,\r\n    DeleteDeckModalComponent,\r\n    EditNameModalComponent,\r\n    NotFoundComponent,\r\n    AdminComponent,\r\n    HasClaimDirective,\r\n    SuccessComponent,\r\n    ConfirmEmailComponent,\r\n    ForgotPasswordComponent,\r\n    ForgotPasswordConfirmationComponent,\r\n    ResetPasswordComponent,\r\n    ResetPasswordConfirmationComponent,\r\n    AccountSettingsComponent,\r\n    ChangePasswordComponent,\r\n    ChangePasswordSuccessComponent,\r\n    ServerErrorComponent,\r\n    DeleteCardModalComponent,\r\n    UpdateSwModalComponent,\r\n    DeleteDataComponent,\r\n    DeleteDataSuccessComponent,\r\n    EditUserComponent,\r\n    EditEmailConfirmedModalComponent,\r\n    ViewUserDecksComponent,\r\n    ViewDeckComponent,\r\n    EditPasswordModalComponent,\r\n    DeleteUserModalComponent,\r\n    SendVerificationEmailComponent,\r\n    SendVerificationEmailConfirmationComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ModalModule.forRoot(),\r\n    NgxSpinnerModule,\r\n    BrowserAnimationsModule,\r\n    BsDropdownModule.forRoot(),\r\n    NgxPaginationModule,\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-bottom-left',\r\n    }),\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: environment.production,\r\n      // Register the ServiceWorker as soon as the app is stable\r\n      // or after 30 seconds (whichever comes first).\r\n      registrationStrategy: 'registerImmediately',\r\n    }),\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","<div class=\"container m-nav\">\r\n  <div class=\"hero\">\r\n    <div class=\"hero-info\">\r\n      <h1>Fast Flash Cards</h1>\r\n      <h4 class=\"mb-4\">\r\n        Create an account to store all of your cards for free.\r\n      </h4>\r\n      <a [routerLink]=\"['/register']\" class=\"btn btn-success btn-lg registerBtn\"\r\n        >Register</a\r\n      >\r\n      <a [routerLink]=\"['/login']\" class=\"btn btn-info btn-lg loginBtn\"\r\n        >Login</a\r\n      >\r\n      <button class=\"btn btn-lg btn-warning demoLoginBtn\" (click)=\"demoLogin()\">\r\n        Try Demo\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"hero-graphic\">\r\n      <div class=\"d-flex justify-content-between\">\r\n        <h2 class=\"h6\">\r\n          <button (click)=\"resetCounter()\" class=\"demo-deck-btn\">\r\n            Demo Deck\r\n          </button>\r\n        </h2>\r\n        <span>{{ counter + 1 }}/{{ demoCards.length }}</span>\r\n      </div>\r\n\r\n      <div class=\"card mb-3 my-card\">\r\n        <div class=\"card-body\">\r\n          <p class=\"h4 text-center w-100\">{{ demoCards[counter].front }}</p>\r\n\r\n          <div *ngIf=\"reveal\">\r\n            <hr />\r\n            <p class=\"h4 text-center w-100\">\r\n              {{ demoCards[counter].back }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card-footer d-flex justify-content-center\">\r\n          <button\r\n            *ngIf=\"!reveal\"\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            (click)=\"toggleReveal()\"\r\n          >\r\n            Show Answer\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-info\"\r\n            *ngIf=\"reveal\"\r\n            (click)=\"next()\"\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  demoCards = [\r\n    // {\r\n    //   front: 'What are the benefits of flash cards?',\r\n    //   back: 'Flash cards are one of the best ways to test yourself and train your brain to actively recall information.',\r\n    // },\r\n    {\r\n      front: 'Why use FastFlashCards.com?',\r\n      back: 'Take your cards with you everywhere! Just open your browser and study.',\r\n    },\r\n    {\r\n      front: 'How do I start making cards?',\r\n      back: \"Register with an email and password. That's it!\",\r\n    },\r\n    {\r\n      front: 'Why do I have to make an account?',\r\n      back: \"That's the only way to save your cards! Your email and data will only be used here to manage your account.\",\r\n    },\r\n  ];\r\n  counter: number = 0;\r\n  reveal = false;\r\n\r\n  constructor(\r\n    private _titleService: Title,\r\n    private _router: Router,\r\n    private _toastr: ToastrService,\r\n    private _accountService: AccountService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(`Home | FastFlashCards.com`);\r\n  }\r\n\r\n  toggleReveal() {\r\n    this.reveal = !this.reveal;\r\n  }\r\n\r\n  next() {\r\n    if (this.counter + 1 >= this.demoCards.length) {\r\n      this.reveal = false;\r\n      this.counter = 0;\r\n      return;\r\n    }\r\n\r\n    this.counter++;\r\n    this.reveal = false;\r\n  }\r\n\r\n  resetCounter() {\r\n    this.counter = 0;\r\n  }\r\n\r\n  demoLogin() {\r\n    this._accountService.demoLogin().subscribe(\r\n      () => {\r\n        this._router.navigateByUrl('/user/decks');\r\n      },\r\n      (error) => {\r\n        this._toastr.error('Error logging into demo.');\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormGroup,\r\n  ValidatorFn,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ResetPasswordDTO } from 'src/app/_models/resetPasswordDTO';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css'],\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  email: string;\r\n  token: string;\r\n  resetPasswordForm: FormGroup;\r\n  validationErrors: string[] = [];\r\n  errors = {\r\n    password: false,\r\n    confirmPassword: false,\r\n    email: false,\r\n    token: false,\r\n  };\r\n\r\n  constructor(\r\n    public _accountService: AccountService,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute,\r\n    private _fb: FormBuilder,\r\n    private _titleService: Title\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(`Reset Password | FastFlashCards.com`);\r\n    this.initializeForm();\r\n    this.email = this._route.snapshot.queryParamMap.get('email');\r\n    this.token = this._route.snapshot.queryParamMap.get('token');\r\n    if (!this.email) this.errors.email = true;\r\n    if (!this.token) this.errors.token = true;\r\n  }\r\n\r\n  initializeForm() {\r\n    this.resetPasswordForm = this._fb.group({\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: [\r\n        '',\r\n        [Validators.required, this.matchValues('password')],\r\n      ],\r\n    });\r\n    this.resetPasswordForm.controls.password.valueChanges.subscribe(() => {\r\n      this.resetPasswordForm.controls.confirmPassword.updateValueAndValidity();\r\n    });\r\n  }\r\n\r\n  matchValues(matchTo: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      return control?.value === control?.parent?.controls[matchTo].value\r\n        ? null\r\n        : { isMatching: true };\r\n    };\r\n  }\r\n\r\n  resetPassword() {\r\n    const dto: ResetPasswordDTO = {\r\n      email: this.email,\r\n      token: this.token,\r\n      password: this.resetPasswordForm.value.password,\r\n    };\r\n    this._accountService.resetPassword(dto).subscribe(\r\n      (response) => {\r\n        this._router.navigateByUrl(`/reset-password/success`);\r\n      },\r\n      (error) => {\r\n        this.validationErrors = error;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"col-lg-4 col-md-6 m-nav mx-auto resetPasswordWrapper\">\r\n  <h1 class=\"text-center pt-3 pt-lg-5 h3\">Reset Password</h1>\r\n  <form\r\n    [formGroup]=\"resetPasswordForm\"\r\n    (ngSubmit)=\"resetPasswordForm.valid && resetPassword()\"\r\n    class=\"mt-4\"\r\n    *ngIf=\"!errors.email && !errors.token\"\r\n  >\r\n    <div class=\"form-group mb-3\">\r\n      <label for=\"password\">New Password</label>\r\n      <input\r\n        [class.is-invalid]=\"\r\n          resetPasswordForm.get('password').errors &&\r\n          resetPasswordForm.get('password').touched\r\n        \"\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        formControlName=\"password\"\r\n      />\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"resetPasswordForm.get('password').hasError('required')\"\r\n      >\r\n        This field is required.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"resetPasswordForm.get('password').hasError('minlength')\"\r\n      >\r\n        Password must be at least 6 characters, contain an uppercase letter, and\r\n        a number.\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group mb-3\">\r\n      <label for=\"confirmPassword\">Confirm New Password</label>\r\n      <input\r\n        [class.is-invalid]=\"\r\n          resetPasswordForm.get('confirmPassword').errors &&\r\n          resetPasswordForm.get('confirmPassword').touched\r\n        \"\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        formControlName=\"confirmPassword\"\r\n      />\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"resetPasswordForm.get('confirmPassword').hasError('required')\"\r\n      >\r\n        Please confirm your password.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"resetPasswordForm.get('confirmPassword').hasError('isMatching')\"\r\n      >\r\n        Your entered passwords don't match.\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"validationErrors.length > 0\">\r\n      <ul class=\"text-danger\">\r\n        <li *ngFor=\"let error of validationErrors\">\r\n          {{ error }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <button\r\n      [disabled]=\"!resetPasswordForm.valid\"\r\n      class=\"btn btn-primary w-100 mt-3\"\r\n      type=\"submit\"\r\n    >\r\n      Reset Password\r\n    </button>\r\n  </form>\r\n  <div *ngIf=\"errors.email || errors.token\" class=\"text-danger mt-4\">\r\n    An issue has occurred. Your password cannot be reset with the link you've\r\n    used. Please make sure you're using the exact link from the email and try\r\n    again.\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { DeleteDataDTO } from 'src/app/_models/deleteDataDTO';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-delete-data',\r\n  templateUrl: './delete-data.component.html',\r\n  styleUrls: ['./delete-data.component.css'],\r\n})\r\nexport class DeleteDataComponent implements OnInit {\r\n  deleteDataForm: FormGroup;\r\n  validationErrors: string[] = [];\r\n  errors = {\r\n    password: false,\r\n  };\r\n\r\n  constructor(\r\n    private _fb: FormBuilder,\r\n    private _router: Router,\r\n    public _accountService: AccountService,\r\n    private _titleService: Title\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(`Delete Data | FastFlashCards.com`);\r\n    this.initializeForm();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.deleteDataForm = this._fb.group({\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n    });\r\n  }\r\n\r\n  deleteData() {\r\n    const dto: DeleteDataDTO = {\r\n      password: this.deleteDataForm.value.password,\r\n    };\r\n    this._accountService.deleteData(dto).subscribe(\r\n      () => {\r\n        this._router.navigateByUrl(\r\n          `/user/account-settings/delete-data/success`\r\n        );\r\n        this._accountService.logout();\r\n      },\r\n      (error) => {\r\n        console.log('in deleteData component:', error);\r\n        if (error.error.type === 'password') {\r\n          this.errors.password = true;\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container m-nav\">\r\n  <h1 class=\"h3 pt-3\">Delete Data</h1>\r\n\r\n  <form\r\n    [formGroup]=\"deleteDataForm\"\r\n    (ngSubmit)=\"deleteDataForm.valid && deleteData()\"\r\n    class=\"mt-4 col-md-4 changePasswordForm\"\r\n  >\r\n    <div class=\"form-group mb-3\">\r\n      <label for=\"currentPassword\"\r\n        >Enter your password to delete your account.</label\r\n      >\r\n      <input\r\n        [class.is-invalid]=\"\r\n          deleteDataForm.get('password').errors &&\r\n          deleteDataForm.get('password').touched\r\n        \"\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        formControlName=\"password\"\r\n      />\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"deleteDataForm.get('password').hasError('required')\"\r\n      >\r\n        This field is required.\r\n      </div>\r\n      <div\r\n        class=\"invalid-feedback\"\r\n        *ngIf=\"deleteDataForm.get('password').hasError('minlength')\"\r\n      >\r\n        Password must be at least 6 characters, contain an uppercase letter, and\r\n        a number.\r\n      </div>\r\n      <div *ngIf=\"errors.password\" class=\"text-danger invalidFeedback\">\r\n        Invalid password. *Reminder: passwords require a number, uppercase\r\n        letter, and at least 6 characters.\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"validationErrors.length > 0\">\r\n      <ul class=\"text-danger\">\r\n        <li *ngFor=\"let error of validationErrors\">\r\n          {{ error }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <button\r\n      [disabled]=\"!deleteDataForm.valid\"\r\n      class=\"btn btn-outline-danger w-100 mt-3\"\r\n      type=\"submit\"\r\n    >\r\n      Delete Account\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AccountService } from './account.service';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DeckService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  // persisting deck across pages\r\n  private currentDeckIdSource = new BehaviorSubject<number>(null);\r\n  currentDeckId$ = this.currentDeckIdSource.asObservable();\r\n\r\n  constructor(private _http: HttpClient, private _userService: UserService) {}\r\n\r\n  createDeck(name: string) {\r\n    return this._http.post(`${this.baseUrl}/deck?deckName=${name}`, {}).pipe(\r\n      map((deck: any) => {\r\n        deck.cards = [];\r\n        this._userService.userCache.decks.push(deck);\r\n      })\r\n    );\r\n  }\r\n\r\n  setCurrentDeckId(id: number) {\r\n    this.currentDeckIdSource.next(id);\r\n  }\r\n\r\n  getDeckById(id: number) {\r\n    const deckFromCache = this._userService.userCache?.decks.find(\r\n      (deck) => deck.id === id\r\n    );\r\n\r\n    if (deckFromCache) {\r\n      return of(deckFromCache);\r\n    }\r\n\r\n    return this._http.get(`${this.baseUrl}/deck?id=${id}`);\r\n  }\r\n\r\n  editDeckName(name: string, id: number) {\r\n    return this._http.put(`${this.baseUrl}/deck?name=${name}&id=${id}`, {});\r\n  }\r\n\r\n  deleteDeck(id: number) {\r\n    return this._http.delete(`${this.baseUrl}/deck/${id}`);\r\n  }\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { Deck } from 'src/app/_models/deck';\r\nimport { LoggedInUser } from 'src/app/_models/loggedInUser';\r\nimport { DeckService } from 'src/app/_services/deck.service';\r\nimport { UserService } from 'src/app/_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-name-modal',\r\n  templateUrl: './edit-name-modal.component.html',\r\n  styleUrls: ['./edit-name-modal.component.css'],\r\n})\r\nexport class EditNameModalComponent implements OnInit {\r\n  name: string;\r\n  deckId: number;\r\n\r\n  constructor(\r\n    public bsModalRef: BsModalRef,\r\n    private _deckService: DeckService,\r\n    private _userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  editDeckName(name: string, deckId: number) {\r\n    this._deckService.editDeckName(name, deckId).subscribe(() => {\r\n      // in the subscribe callback, update the cache\r\n      let deckToUpdate = this._userService.userCache.decks.find(\r\n        (deck) => deck.id === deckId\r\n      );\r\n      deckToUpdate.name = name;\r\n      this.bsModalRef.hide();\r\n    });\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title pull-left\">Edit Deck Name</h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close pull-right closeBtn\"\r\n    aria-label=\"Close\"\r\n    (click)=\"bsModalRef.hide()\"\r\n  >\r\n    <span class=\"timesSpan\" aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <form #createDeckForm>\r\n    <label for=\"name\">Name</label>\r\n    <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" />\r\n  </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button\r\n    type=\"button\"\r\n    class=\"btn btn-primary\"\r\n    (click)=\"editDeckName(name, deckId)\"\r\n  >\r\n    Save\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"bsModalRef.hide()\">\r\n    Cancel\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css'],\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n  constructor(private _titleService: Title) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(`Not Found | FastFlashCards.com`);\r\n  }\r\n}\r\n","<div class=\"container m-nav\">\r\n  <h1>Not Found Page</h1>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css'],\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  year;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    let dateObj = new Date();\r\n    this.year = dateObj.getFullYear();\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n  <footer>\r\n    <div>\r\n      <span class=\"copyright\">&copy; {{ year }} FastFlashCards.com</span>\r\n      <a routerLink=\"/\">\r\n        <svg\r\n          width=\"42\"\r\n          height=\"25\"\r\n          viewBox=\"0 0 42 25\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M25.456 16.8188L5.87566 20.2713C4.6738 20.4833 3.52965 19.5582 3.29743 18.2413L1.4249 7.62165C1.18775 6.27668 1.9765 5.03973 3.15332 4.83222L22.7336 1.37969C23.9355 1.16777 25.0796 2.09279 25.3118 3.40974L27.1794 14.0014C27.4166 15.3463 26.6578 16.6069 25.456 16.8188Z\"\r\n            fill=\"#FEFEFE\"\r\n          />\r\n          <path\r\n            d=\"M25.456 16.8188L5.87566 20.2713C4.6738 20.4833 3.52965 19.5582 3.29743 18.2413L1.4249 7.62165C1.18775 6.27668 1.9765 5.03973 3.15332 4.83222L22.7336 1.37969C23.9355 1.16777 25.0796 2.09279 25.3118 3.40974L27.1794 14.0014C27.4166 15.3463 26.6578 16.6069 25.456 16.8188Z\"\r\n            stroke=\"#212529\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M31.3512 24.0722H11.4689C10.2485 24.0722 9.28235 22.9625 9.28235 21.6253V10.8418C9.28235 9.47609 10.2739 8.3949 11.4689 8.3949H31.3512C32.5716 8.3949 33.5378 9.50454 33.5378 10.8418V21.5968C33.5378 22.9625 32.5716 24.0722 31.3512 24.0722Z\"\r\n            fill=\"#FEFEFE\"\r\n          />\r\n          <path\r\n            d=\"M31.3512 24.0722H11.4689C10.2485 24.0722 9.28235 22.9625 9.28235 21.6253V10.8418C9.28235 9.47609 10.2739 8.3949 11.4689 8.3949H31.3512C32.5716 8.3949 33.5378 9.50454 33.5378 10.8418V21.5968C33.5378 22.9625 32.5716 24.0722 31.3512 24.0722Z\"\r\n            stroke=\"#212529\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M35.6018 23.2895L16.1539 19.1558C14.9602 18.902 14.2458 17.6158 14.5239 16.3077L16.7659 5.7599C17.0498 4.42402 18.2445 3.57261 19.4134 3.82106L38.8612 7.95484C40.055 8.20857 40.7693 9.49484 40.4913 10.8029L38.2552 21.3229C37.9712 22.6588 36.7955 23.5433 35.6018 23.2895Z\"\r\n            fill=\"#FEFEFE\"\r\n          />\r\n          <path\r\n            d=\"M35.6018 23.2895L16.1539 19.1558C14.9602 18.902 14.2458 17.6158 14.5239 16.3077L16.7659 5.7599C17.0498 4.42402 18.2445 3.57261 19.4134 3.82106L38.8612 7.95484C40.055 8.20857 40.7693 9.49484 40.4913 10.8029L38.2552 21.3229C37.9712 22.6588 36.7955 23.5433 35.6018 23.2895Z\"\r\n            stroke=\"#212529\"\r\n          />\r\n          <path\r\n            d=\"M35.6018 23.2895L16.1539 19.1558C14.9602 18.902 14.2458 17.6158 14.5239 16.3077L16.7659 5.7599C17.0498 4.42402 18.2445 3.57261 19.4134 3.82106L38.8612 7.95484C40.055 8.20857 40.7693 9.49484 40.4913 10.8029L38.2552 21.3229C37.9712 22.6588 36.7955 23.5433 35.6018 23.2895Z\"\r\n            stroke=\"#212529\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M21.9434 9.88025L30.6234 11.7252\"\r\n            stroke=\"#212529\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M21.3484 12.6794L27.1008 13.9022\"\r\n            stroke=\"#212529\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n          />\r\n        </svg>\r\n      </a>\r\n    </div>\r\n    <span>Contact: admin@fastflashcards.com</span>\r\n  </footer>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-change-password-success',\r\n  templateUrl: './change-password-success.component.html',\r\n  styleUrls: ['./change-password-success.component.css']\r\n})\r\nexport class ChangePasswordSuccessComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container m-nav\">\r\n  <h1 class=\"h3 pt-3\">Change Password</h1>\r\n  <div class=\"mt-4\">Your password has been changed.</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-send-verification-email-confirmation',\r\n  templateUrl: './send-verification-email-confirmation.component.html',\r\n  styleUrls: ['./send-verification-email-confirmation.component.css']\r\n})\r\nexport class SendVerificationEmailConfirmationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container m-nav\">\r\n  <div class=\"col-md-6\">\r\n    <h4 class=\"pt-3\">Request Successful</h4>\r\n    <p>\r\n      An email has been sent to the provided address. To verify your email\r\n      account, check your email and click the link.\r\n    </p>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-email-confirmed-modal',\r\n  templateUrl: './edit-email-confirmed-modal.component.html',\r\n  styleUrls: ['./edit-email-confirmed-modal.component.css'],\r\n})\r\nexport class EditEmailConfirmedModalComponent implements OnInit {\r\n  emailConfirmed: boolean;\r\n  userId: string;\r\n  parentNgOnInit;\r\n\r\n  constructor(\r\n    public bsModalRef: BsModalRef,\r\n    private _adminService: AdminService,\r\n    private _toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  editHandler() {\r\n    this._adminService\r\n      .editEmailConfirmed(this.emailConfirmed, this.userId)\r\n      .subscribe(\r\n        (res) => {\r\n          this.bsModalRef.hide();\r\n          // this.parentNgOnInit();\r\n          if (\r\n            this._adminService.userCache !== undefined &&\r\n            this._adminService.userCache !== undefined\r\n          ) {\r\n            this._adminService.userCache.emailConfirmed = this.emailConfirmed;\r\n          }\r\n          this._toastr.success('Email confirmed updated.');\r\n        },\r\n        (error) => {\r\n          this._toastr.error('Error updading email confirmed.');\r\n          console.error(error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title pull-left\">Edit Email Confirmed</h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close pull-right closeBtn\"\r\n    aria-label=\"Close\"\r\n    (click)=\"bsModalRef.hide()\"\r\n  >\r\n    <span class=\"timesSpan\" aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <form #editEmailConfirmed>\r\n    <input\r\n      type=\"checkbox\"\r\n      [(ngModel)]=\"emailConfirmed\"\r\n      name=\"emailConfirmed\"\r\n      class=\"form-check-input\"\r\n    />\r\n    <label for=\"emailConfirmed\" class=\"form-check-label\">Email Confirmed</label>\r\n  </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"editHandler()\">\r\n    Edit\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"bsModalRef.hide()\">\r\n    Cancel\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\nimport { DeleteUserModalComponent } from './delete-user-modal/delete-user-modal.component';\r\nimport { EditEmailConfirmedModalComponent } from './edit-email-confirmed-modal/edit-email-confirmed-modal.component';\r\nimport { EditPasswordModalComponent } from './edit-password-modal/edit-password-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-edit-user',\r\n  templateUrl: './edit-user.component.html',\r\n  styleUrls: ['./edit-user.component.css'],\r\n})\r\nexport class EditUserComponent implements OnInit {\r\n  user;\r\n  userId: string;\r\n  cardCount = 0;\r\n\r\n  // modals\r\n  bsModalRef: BsModalRef;\r\n\r\n  constructor(\r\n    private _adminService: AdminService,\r\n    private _route: ActivatedRoute,\r\n    private _modalService: BsModalService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userId = this._route.snapshot.paramMap.get('id');\r\n    this._adminService.getUser(this.userId).subscribe((res: any) => {\r\n      this.user = res;\r\n      if (this.user.decks.length > 0) {\r\n        this.countCards(this.user.decks);\r\n      }\r\n    });\r\n  }\r\n\r\n  countCards(decksArr: any) {\r\n    let count = 0;\r\n    for (let i = 0; i < decksArr.length; i++) {\r\n      let cardsInDeck = decksArr[i].cards.length;\r\n      count += cardsInDeck;\r\n    }\r\n    this.cardCount = count;\r\n  }\r\n\r\n  openEditEmailConfirmedModal() {\r\n    this.bsModalRef = this._modalService.show(EditEmailConfirmedModalComponent);\r\n    this.bsModalRef.content.emailConfirmed = this.user.emailConfirmed;\r\n    this.bsModalRef.content.userId = this.userId;\r\n    this.bsModalRef.content.parentNgOnInit = this.ngOnInit.bind(this);\r\n  }\r\n\r\n  openEditPasswordModal() {\r\n    this.bsModalRef = this._modalService.show(EditPasswordModalComponent);\r\n    this.bsModalRef.content.userId = this.userId;\r\n  }\r\n\r\n  openDeleteUserModal() {\r\n    this.bsModalRef = this._modalService.show(DeleteUserModalComponent);\r\n    this.bsModalRef.content.userId = this.userId;\r\n  }\r\n}\r\n","<div class=\"container m-nav\" *ngIf=\"user\">\r\n  <h1 class=\"h2 pt-3\">Admin Edit User</h1>\r\n  <a routerLink=\"/admin\">&larr; Back to admin home</a>\r\n  <div class=\"col-xl-6 pt-3\">\r\n    <table class=\"table table-hover\">\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">Email</th>\r\n          <td>{{ user.email }}</td>\r\n          <td>-</td>\r\n          <td>-</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Is Email Confirmed?</th>\r\n          <td>{{ user.emailConfirmed }}</td>\r\n          <td>-</td>\r\n          <td>\r\n            <button\r\n              class=\"anchorStyleBtn\"\r\n              (click)=\"openEditEmailConfirmedModal()\"\r\n            >\r\n              Edit\r\n            </button>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Decks</th>\r\n          <td>{{ user.decks.length }}</td>\r\n          <td>\r\n            <a routerLink=\"/admin/edit-user/{{ userId }}/view-user-decks\"\r\n              >View</a\r\n            >\r\n          </td>\r\n          <td>-</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Cards</th>\r\n          <td>{{ cardCount }}</td>\r\n          <td>\r\n            <a routerLink=\"/admin/edit-user/{{ userId }}/view-user-decks\"\r\n              >View</a\r\n            >\r\n          </td>\r\n          <td>-</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Password</th>\r\n          <td>-</td>\r\n          <td>-</td>\r\n          <td>\r\n            <button class=\"anchorStyleBtn\" (click)=\"openEditPasswordModal()\">\r\n              Edit\r\n            </button>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Delete User</th>\r\n          <td>-</td>\r\n          <td>-</td>\r\n          <td>\r\n            <button\r\n              class=\"anchorStyleBtnDanger\"\r\n              (click)=\"openDeleteUserModal()\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-password-modal',\r\n  templateUrl: './edit-password-modal.component.html',\r\n  styleUrls: ['./edit-password-modal.component.css'],\r\n})\r\nexport class EditPasswordModalComponent implements OnInit {\r\n  userId: string;\r\n  newPassword: string;\r\n\r\n  constructor(\r\n    public bsModalRef: BsModalRef,\r\n    private _adminService: AdminService,\r\n    private _toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  editPasswordHandler() {\r\n    this._adminService.editPassword(this.newPassword, this.userId).subscribe(\r\n      (res) => {\r\n        this.bsModalRef.hide();\r\n        this._toastr.success('Password changed.');\r\n      },\r\n      (error) => {\r\n        this._toastr.error('Error changing password.');\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title pull-left\">Edit Password</h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close pull-right closeBtn\"\r\n    aria-label=\"Close\"\r\n    (click)=\"bsModalRef.hide()\"\r\n  >\r\n    <span class=\"timesSpan\" aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <form #editPasswordForm>\r\n    <label for=\"newPassword\" class=\"form-check-label\">New Password</label>\r\n    <input\r\n      type=\"password\"\r\n      [(ngModel)]=\"newPassword\"\r\n      name=\"newPassword\"\r\n      class=\"form-control\"\r\n    />\r\n  </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"editPasswordHandler()\">\r\n    Edit\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"bsModalRef.hide()\">\r\n    Cancel\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-delete-user-modal',\r\n  templateUrl: './delete-user-modal.component.html',\r\n  styleUrls: ['./delete-user-modal.component.css'],\r\n})\r\nexport class DeleteUserModalComponent implements OnInit {\r\n  userId: string;\r\n\r\n  constructor(\r\n    public bsModalRef: BsModalRef,\r\n    private _adminService: AdminService,\r\n    private _toastr: ToastrService,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  deleteUserHandler() {\r\n    this._adminService.deleteUser(this.userId).subscribe(\r\n      (res) => {\r\n        this.bsModalRef.hide();\r\n        this._toastr.success('User deleted.');\r\n        this._router.navigateByUrl(`/admin`);\r\n      },\r\n      (error) => {\r\n        this._toastr.error('Error deleting user.');\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title pull-left\">Delete User</h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close pull-right closeBtn\"\r\n    aria-label=\"Close\"\r\n    (click)=\"bsModalRef.hide()\"\r\n  >\r\n    <span class=\"timesSpan\" aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">Are you sure you want to delete this account?</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteUserHandler()\">\r\n    Delete\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"bsModalRef.hide()\">\r\n    Cancel\r\n  </button>\r\n</div>\r\n","<div class=\"container m-nav\" *ngIf=\"user\" style=\"overflow-wrap: anywhere\">\r\n  <h1 class=\"h3 pt-3\">Account Settings</h1>\r\n  <table class=\"mt-3\">\r\n    <tr class=\"tableRow\">\r\n      <th class=\"heading text-muted\">Email Address:</th>\r\n      <td>{{ user.email }}</td>\r\n    </tr>\r\n    <tr class=\"tableRow\">\r\n      <th class=\"heading text-muted\">Password:</th>\r\n      <td>\r\n        <a routerLink=\"/user/account-settings/change-password\"\r\n          >Change password</a\r\n        >\r\n      </td>\r\n    </tr>\r\n    <tr class=\"tableRow\">\r\n      <th class=\"heading text-muted\">Data:</th>\r\n      <td>\r\n        <a class=\"text-danger\" routerLink=\"/user/account-settings/delete-data\"\r\n          >Delete Data</a\r\n        ><span class=\"text-muted noteText\"\r\n          >(Data is your account, decks, and cards.)</span\r\n        >\r\n      </td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { LoggedInUser } from 'src/app/_models/loggedInUser';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { UserService } from 'src/app/_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-account-settings',\r\n  templateUrl: './account-settings.component.html',\r\n  styleUrls: ['./account-settings.component.css'],\r\n})\r\nexport class AccountSettingsComponent implements OnInit {\r\n  loggedInUser: LoggedInUser;\r\n  user: User;\r\n  userHasPassword: boolean;\r\n\r\n  constructor(\r\n    private _userService: UserService,\r\n    private _accountService: AccountService,\r\n    private _titleService: Title\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(`Account Settings | FastFlashCards.com`);\r\n    this.getLoggedInUser();\r\n    this.loadUser();\r\n  }\r\n\r\n  loadUser() {\r\n    this._userService.getUser(this.loggedInUser.id).subscribe((user) => {\r\n      this.user = user;\r\n    });\r\n  }\r\n\r\n  getLoggedInUser() {\r\n    this._accountService.currentUser$.subscribe((user) => {\r\n      this.loggedInUser = user;\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reset-password-confirmation',\r\n  templateUrl: './reset-password-confirmation.component.html',\r\n  styleUrls: ['./reset-password-confirmation.component.css']\r\n})\r\nexport class ResetPasswordConfirmationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container m-nav\">\r\n  <h4 class=\"pt-3\">Reset Password Confirmation</h4>\r\n  <p>\r\n    Your password has been reset.\r\n    <a routerLink=\"/login\">Click here</a> to log in.\r\n  </p>\r\n</div>\r\n","import {\r\n  Directive,\r\n  Input,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { LoggedInUser } from '../_models/loggedInUser';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Directive({\r\n  selector: '[appHasClaim]',\r\n})\r\nexport class HasClaimDirective implements OnInit {\r\n  user: LoggedInUser;\r\n  @Input() appHasClaim: string[];\r\n\r\n  constructor(\r\n    private _viewContainerRef: ViewContainerRef,\r\n    private _templateRef: TemplateRef<any>,\r\n    private _accountService: AccountService\r\n  ) {\r\n    this._accountService.currentUser$.pipe(take(1)).subscribe((user) => {\r\n      this.user = user;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // clear view if no roles\r\n    if (this.user === null) {\r\n      this._viewContainerRef.clear();\r\n      return;\r\n    }\r\n\r\n    if (this.user?.isAdmin && this.appHasClaim.includes('IsAdmin')) {\r\n      this._viewContainerRef.createEmbeddedView(this._templateRef);\r\n    } else {\r\n      this._viewContainerRef.clear();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AccountSettingsComponent } from './_components/pages/account-settings/account-settings.component';\r\nimport { ChangePasswordSuccessComponent } from './_components/pages/account-settings/change-password/change-password-success/change-password-success.component';\r\nimport { ChangePasswordComponent } from './_components/pages/account-settings/change-password/change-password.component';\r\nimport { DeleteDataSuccessComponent } from './_components/pages/account-settings/delete-data/delete-data-success/delete-data-success.component';\r\nimport { DeleteDataComponent } from './_components/pages/account-settings/delete-data/delete-data.component';\r\nimport { AddCardsComponent } from './_components/pages/add-cards/add-cards.component';\r\nimport { AdminComponent } from './_components/pages/admin/admin.component';\r\nimport { EditUserComponent } from './_components/pages/admin/edit-user/edit-user.component';\r\nimport { ViewDeckComponent } from './_components/pages/admin/edit-user/view-deck/view-deck.component';\r\nimport { ViewUserDecksComponent } from './_components/pages/admin/edit-user/view-user-decks/view-user-decks.component';\r\nimport { DeckPageComponent } from './_components/pages/decks/deck-page/deck-page.component';\r\nimport { DecksComponent } from './_components/pages/decks/decks.component';\r\nimport { StudyComponent } from './_components/pages/decks/study/study.component';\r\nimport { EditCardsComponent } from './_components/pages/edit-cards/edit-cards.component';\r\nimport { HomeComponent } from './_components/pages/home/home.component';\r\nimport { ForgotPasswordConfirmationComponent } from './_components/pages/login/forgot-password-confirmation/forgot-password-confirmation.component';\r\nimport { ForgotPasswordComponent } from './_components/pages/login/forgot-password/forgot-password.component';\r\nimport { LoginComponent } from './_components/pages/login/login.component';\r\nimport { SendVerificationEmailConfirmationComponent } from './_components/pages/login/send-verification-email-confirmation/send-verification-email-confirmation.component';\r\nimport { SendVerificationEmailComponent } from './_components/pages/login/send-verification-email/send-verification-email.component';\r\nimport { NotFoundComponent } from './_components/pages/not-found/not-found.component';\r\nimport { ConfirmEmailComponent } from './_components/pages/register/confirm-email/confirm-email.component';\r\nimport { RegisterComponent } from './_components/pages/register/register.component';\r\nimport { SuccessComponent } from './_components/pages/register/success/success.component';\r\nimport { ResetPasswordConfirmationComponent } from './_components/pages/reset-password/reset-password-confirmation/reset-password-confirmation.component';\r\nimport { ResetPasswordComponent } from './_components/pages/reset-password/reset-password.component';\r\nimport { ServerErrorComponent } from './_components/pages/server-error/server-error.component';\r\nimport { AdminGuard } from './_guards/admin.guard';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'login/forgot-password', component: ForgotPasswordComponent },\r\n  {\r\n    path: 'login/forgot-password-confirmation',\r\n    component: ForgotPasswordConfirmationComponent,\r\n  },\r\n  {\r\n    path: 'login/verification-email',\r\n    component: SendVerificationEmailComponent,\r\n  },\r\n  {\r\n    path: 'login/verification-email-success',\r\n    component: SendVerificationEmailConfirmationComponent,\r\n  },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'register/success/:email', component: SuccessComponent },\r\n  { path: 'register/confirm-email', component: ConfirmEmailComponent },\r\n  { path: 'reset-password', component: ResetPasswordComponent },\r\n  {\r\n    path: 'reset-password/success',\r\n    component: ResetPasswordConfirmationComponent,\r\n  },\r\n  {\r\n    path: 'user/account-settings/delete-data/success',\r\n    component: DeleteDataSuccessComponent,\r\n  },\r\n  {\r\n    path: 'server-error/:error',\r\n    component: ServerErrorComponent,\r\n  },\r\n  {\r\n    path: 'server-error',\r\n    component: ServerErrorComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'user/decks', component: DecksComponent },\r\n      { path: 'user/decks/:id', component: DeckPageComponent },\r\n      { path: 'user/add-cards', component: AddCardsComponent },\r\n      { path: 'user/add-cards/:id', component: AddCardsComponent },\r\n      { path: 'user/decks/:id/study', component: StudyComponent },\r\n      { path: 'user/edit-cards', component: EditCardsComponent },\r\n      { path: 'user/edit-cards/:id', component: EditCardsComponent },\r\n      { path: 'user/account-settings', component: AccountSettingsComponent },\r\n      {\r\n        path: 'user/account-settings/change-password',\r\n        component: ChangePasswordComponent,\r\n      },\r\n      {\r\n        path: 'user/account-settings/change-password/success',\r\n        component: ChangePasswordSuccessComponent,\r\n      },\r\n      {\r\n        path: 'user/account-settings/delete-data',\r\n        component: DeleteDataComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AdminGuard],\r\n    children: [\r\n      { path: 'admin', component: AdminComponent },\r\n      { path: 'admin/edit-user/:id', component: EditUserComponent },\r\n      {\r\n        path: 'admin/edit-user/:id/view-user-decks',\r\n        component: ViewUserDecksComponent,\r\n      },\r\n      {\r\n        path: 'admin/edit-user/:id/view-deck/:deckId',\r\n        component: ViewDeckComponent,\r\n      },\r\n    ],\r\n  },\r\n\r\n  { path: '**', component: NotFoundComponent, pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Deck } from 'src/app/_models/deck';\r\nimport { DeckService } from 'src/app/_services/deck.service';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormGroup,\r\n  ValidatorFn,\r\n  Validators,\r\n} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-study',\r\n  templateUrl: './study.component.html',\r\n  styleUrls: ['./study.component.css'],\r\n})\r\nexport class StudyComponent implements OnInit {\r\n  deck: Deck;\r\n  deckId: number;\r\n  counter: number = 0;\r\n  reveal: Boolean = false;\r\n  finished: Boolean = false;\r\n\r\n  // goToCardForm\r\n  goToCardForm: FormGroup;\r\n\r\n  // shuffle mode\r\n  shuffleMode = false;\r\n  shuffledDeck = {\r\n    cards: [],\r\n  };\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _titleService: Title,\r\n    private _fb: FormBuilder,\r\n    private _deckService: DeckService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(`Decks | FastFlashCards.com`);\r\n    this.deckId = parseInt(this._route.snapshot.paramMap.get('id'));\r\n    this._deckService.getDeckById(this.deckId).subscribe((deck: Deck) => {\r\n      this.deck = deck;\r\n      this.initializeForm();\r\n    });\r\n  }\r\n\r\n  toggleReveal() {\r\n    this.reveal = !this.reveal;\r\n  }\r\n\r\n  next() {\r\n    if (this.counter + 1 >= this.deck.cards.length) {\r\n      this.finished = true;\r\n      this.reveal = false;\r\n      return;\r\n    }\r\n\r\n    this.counter++;\r\n    this.reveal = false;\r\n  }\r\n\r\n  shuffleDeck() {\r\n    this.shuffledDeck.cards = this.deck.cards.slice();\r\n    for (var i = this.shuffledDeck.cards.length - 1; i > 0; i--) {\r\n      var j = Math.floor(Math.random() * (i + 1));\r\n      var temp = this.shuffledDeck.cards[i];\r\n      this.shuffledDeck.cards[i] = this.shuffledDeck.cards[j];\r\n      this.shuffledDeck.cards[j] = temp;\r\n    }\r\n    this.shuffleMode = true;\r\n  }\r\n\r\n  restartDeck() {\r\n    this.finished = false;\r\n    this.counter = 0;\r\n  }\r\n\r\n  goToCardHandler() {\r\n    this.counter = this.goToCardForm.get('cardNumber').value - 1;\r\n    this.goToCardForm.reset();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.goToCardForm = this._fb.group({\r\n      cardNumber: [\r\n        '',\r\n        [\r\n          Validators.min(1),\r\n          Validators.max(this.deck.cards.length),\r\n          Validators.required,\r\n        ],\r\n      ],\r\n    });\r\n    // this.goToCardForm.controls.cardNumber.valueChanges.subscribe(() => {\r\n    //   this.goToCardForm.controls.confirmPassword.updateValueAndValidity();\r\n    // });\r\n  }\r\n}\r\n","<div class=\"container m-nav\" *ngIf=\"deck\">\r\n  <div\r\n    class=\"col-12 col-xl-6 pt-3 mx-auto d-flex flex-column studyUserInterface\"\r\n  >\r\n    <div class=\"d-flex flex-column mb-2\">\r\n      <h2 class=\"h6\">\r\n        <a routerLink=\"/user/decks/{{ deck.id }}\">{{ deck.name }}</a>\r\n      </h2>\r\n      <div class=\"d-flex justify-content-between\">\r\n        <button (click)=\"shuffleDeck()\" class=\"shuffle-btn\">\r\n          Shuffle deck\r\n        </button>\r\n        <span>{{ counter + 1 }}/{{ deck.cards.length }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card mb-3 my-card\" *ngIf=\"deck && !finished\">\r\n      <div class=\"card-body\">\r\n        <p class=\"text-center w-100 whiteSpace cardText\">\r\n          {{\r\n            shuffleMode\r\n              ? shuffledDeck.cards[counter].front\r\n              : deck.cards[counter].front\r\n          }}\r\n        </p>\r\n\r\n        <div *ngIf=\"reveal\">\r\n          <hr />\r\n          <p class=\"text-center w-100 whiteSpace cardText\">\r\n            {{\r\n              shuffleMode\r\n                ? shuffledDeck.cards[counter].back\r\n                : deck.cards[counter].back\r\n            }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card-footer d-flex justify-content-center cardFooter\">\r\n        <button\r\n          *ngIf=\"!reveal\"\r\n          type=\"button\"\r\n          class=\"btn btn-primary btn-lg\"\r\n          (click)=\"toggleReveal()\"\r\n        >\r\n          Show Answer\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-info btn-lg\"\r\n          *ngIf=\"reveal\"\r\n          (click)=\"next()\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card mb-3 my-card deckCompleteCard\" *ngIf=\"deck && finished\">\r\n      <h3>Deck Complete</h3>\r\n\r\n      <button class=\"btn btn-success mt-2\" (click)=\"restartDeck()\">\r\n        Restart Deck\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-12 col-xl-6 mx-auto goToCardWrapper\">\r\n    <form\r\n      [formGroup]=\"goToCardForm\"\r\n      class=\"d-flex flex-column goToForm\"\r\n      (submit)=\"goToCardForm.valid && goToCardHandler()\"\r\n    >\r\n      <div>\r\n        <label for=\"cardNumber\">Go to card</label>\r\n        <input\r\n          class=\"goToCardInput\"\r\n          name=\"cardNumber\"\r\n          type=\"number\"\r\n          formControlName=\"cardNumber\"\r\n        />\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Deck } from 'src/app/_models/deck';\r\nimport { DeckService } from 'src/app/_services/deck.service';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { DeleteDeckModalComponent } from './delete-deck-modal/delete-deck-modal.component';\r\nimport { EditNameModalComponent } from './edit-name-modal/edit-name-modal.component';\r\nimport { LoggedInUser } from 'src/app/_models/loggedInUser';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-deck-page',\r\n  templateUrl: './deck-page.component.html',\r\n  styleUrls: ['./deck-page.component.css'],\r\n})\r\nexport class DeckPageComponent implements OnInit {\r\n  loggedInUser: LoggedInUser;\r\n  deck: Deck;\r\n  deckId: number;\r\n\r\n  // delete deck\r\n  bsModalRef: BsModalRef;\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _deckService: DeckService,\r\n    private _modalService: BsModalService,\r\n    private _userService: UserService,\r\n    private _accountService: AccountService,\r\n    private _titleService: Title\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(`Decks | FastFlashCards.com`);\r\n    this.deckId = parseInt(this._route.snapshot.paramMap.get('id'));\r\n    this._deckService.setCurrentDeckId(this.deckId);\r\n    if (!this._userService.userCache) {\r\n      this.getLoggedInUser();\r\n      this._userService.getUser(this.loggedInUser.id).subscribe((user) => {\r\n        const deckFromCache = user.decks.find(\r\n          (deck) => deck.id === this.deckId\r\n        );\r\n        if (!deckFromCache) {\r\n          console.error('Deck ID not found in cache.');\r\n        }\r\n        this.deck = deckFromCache;\r\n      });\r\n    } else {\r\n      this._deckService.getDeckById(this.deckId).subscribe((deck: Deck) => {\r\n        this.deck = deck;\r\n      });\r\n    }\r\n  }\r\n\r\n  getLoggedInUser() {\r\n    this._accountService.currentUser$.subscribe((user) => {\r\n      this.loggedInUser = user;\r\n    });\r\n  }\r\n\r\n  openDeleteDeckModal() {\r\n    this.bsModalRef = this._modalService.show(DeleteDeckModalComponent);\r\n    this.bsModalRef.content.deckId = this.deckId;\r\n  }\r\n\r\n  openEditDeckNameModal() {\r\n    this.bsModalRef = this._modalService.show(EditNameModalComponent);\r\n    this.bsModalRef.content.deckId = this.deckId;\r\n  }\r\n}\r\n","<div class=\"container m-nav\" *ngIf=\"deck; else noDeck\">\r\n  <div class=\"col-12 col-xl-6\">\r\n    <h1 class=\"h2 pt-3\">{{ deck.name }}</h1>\r\n\r\n    <p class=\"h5 mt-3\">Total cards: {{ deck.cards.length }}</p>\r\n    <p class=\"text-muted mt-3\" *ngIf=\"deck.cards.length === 0\">\r\n      Add cards to your deck!\r\n    </p>\r\n    <div class=\"d-flex mt-4\">\r\n      <a\r\n        [class.disableLink]=\"deck.cards.length === 0\"\r\n        routerLink=\"/user/decks/{{ deck.id }}/study\"\r\n        class=\"btn btn-success d-inline-block btn-margin\"\r\n        >Study Now</a\r\n      >\r\n      <div class=\"btn-group\" dropdown>\r\n        <button\r\n          id=\"button-basic\"\r\n          dropdownToggle\r\n          type=\"button\"\r\n          class=\"btn btn-secondary dropdown-toggle\"\r\n          aria-controls=\"dropdown-basic\"\r\n        >\r\n          Options\r\n          <span class=\"caret\"></span>\r\n        </button>\r\n        <ul\r\n          id=\"dropdown-basic\"\r\n          *dropdownMenu\r\n          class=\"dropdown-menu\"\r\n          role=\"menu\"\r\n          aria-labelledby=\"button-basic\"\r\n        >\r\n          <li role=\"menuitem\">\r\n            <a\r\n              class=\"dropdown-item secondaryDropdown\"\r\n              routerLink=\"/user/add-cards/{{ deck.id }}\"\r\n              >Add Cards</a\r\n            >\r\n          </li>\r\n          <li role=\"menuitem\">\r\n            <a\r\n              class=\"dropdown-item secondaryDropdown\"\r\n              routerLink=\"/user/edit-cards/{{ deck.id }}\"\r\n              >Edit Cards</a\r\n            >\r\n          </li>\r\n          <li class=\"divider dropdown-divider\"></li>\r\n          <li role=\"menuitem\">\r\n            <button\r\n              class=\"dropdown-item secondaryDropdown\"\r\n              (click)=\"openEditDeckNameModal()\"\r\n            >\r\n              Edit Deck Name\r\n            </button>\r\n          </li>\r\n          <li role=\"menuitem\">\r\n            <button\r\n              class=\"dropdown-item secondaryDropdown\"\r\n              (click)=\"openDeleteDeckModal()\"\r\n            >\r\n              Delete Deck\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #noDeck>\r\n  <div class=\"container m-nav\">\r\n    <div class=\"col-5 pt-4\">\r\n      <h5>Deck not found.</h5>\r\n      <a class=\"btn btn-secondary mt-3\" [routerLink]=\"['/user/decks']\"\r\n        >Return to decks</a\r\n      >\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoggedInUser } from 'src/app/_models/loggedInUser';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { NewDeckModalComponent } from './new-deck-modal/new-deck-modal.component';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-decks',\r\n  templateUrl: './decks.component.html',\r\n  styleUrls: ['./decks.component.css'],\r\n})\r\nexport class DecksComponent implements OnInit {\r\n  loggedInUser: LoggedInUser;\r\n  user: User;\r\n  bsModalRef: BsModalRef;\r\n\r\n  constructor(\r\n    private _userService: UserService,\r\n    private _accountService: AccountService,\r\n    private _modalService: BsModalService,\r\n    private _titleService: Title\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(`Decks | FastFlashCards.com`);\r\n    this.getLoggedInUser();\r\n    this.loadUser();\r\n  }\r\n\r\n  loadUser() {\r\n    this._userService.getUser(this.loggedInUser.id).subscribe((user) => {\r\n      this.user = user;\r\n    });\r\n  }\r\n\r\n  getLoggedInUser() {\r\n    this._accountService.currentUser$.subscribe((user) => {\r\n      this.loggedInUser = user;\r\n    });\r\n  }\r\n\r\n  openCreateDeckModal() {\r\n    this.bsModalRef = this._modalService.show(NewDeckModalComponent);\r\n    this.bsModalRef.content.loadUser = this.loadUser.bind(this);\r\n  }\r\n}\r\n","<div class=\"container m-nav\" *ngIf=\"user\">\r\n  <div class=\"col-12 col-xl-6\">\r\n    <h1 class=\"h2 pt-3\">Decks</h1>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-primary mt-3\"\r\n      (click)=\"openCreateDeckModal()\"\r\n    >\r\n      New Deck +\r\n    </button>\r\n    <table\r\n      *ngIf=\"user.decks.length > 0; else noDecks\"\r\n      class=\"table table-hover mt-3\"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">Cards</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <tr *ngFor=\"let deck of user.decks\">\r\n          <td>\r\n            <a routerLink=\"/user/decks/{{ deck.id }}\">{{ deck.name }}</a>\r\n          </td>\r\n          <td>{{ deck.cards.length }}</td>\r\n          <!-- <td>\r\n            <a routerLink=\"/user/decks/{{ deck.id }}/add-cards\">Add Cards</a>\r\n          </td>\r\n          <td>\r\n            <a routerLink=\"/user/decks/{{ deck.id }}/study\">Study</a>\r\n          </td> -->\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <ng-template #noDecks>\r\n      <p class=\"mt-3\" *ngIf=\"user.decks.length === 0\">\r\n        You haven't made any decks yet. Click \"New Deck\" to create one.\r\n      </p>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","<div class=\"container m-nav\" *ngIf=\"users\">\r\n  <h1 class=\"h2 pt-3\">Admin Page</h1>\r\n  <h2 class=\"h4\">User List</h2>\r\n  <table class=\"table table-hover\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">Email</th>\r\n        <th scope=\"col\">Is Email Confirmed?</th>\r\n        <th scope=\"col\">Decks</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let user of users\">\r\n        <td>\r\n          <a routerLink=\"/admin/edit-user/{{ user.id }}\">{{ user.email }}</a>\r\n        </td>\r\n        <td>{{ user.emailConfirmed }}</td>\r\n        <td>{{ user.decks.length }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css'],\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  users: User[] = [];\r\n\r\n  constructor(\r\n    private _titleService: Title,\r\n    private _adminService: AdminService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._titleService.setTitle(`Admin | FastFlashCards.com`);\r\n    this._adminService.getUsers().subscribe((res) => {\r\n      this.users = res;\r\n    });\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}